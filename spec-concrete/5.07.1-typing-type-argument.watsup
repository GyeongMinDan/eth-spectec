;;
;; Type argument typing
;;
;; syntax typeArgument
;;

;;; realTypeArgument
;;; syntax realTypeArgument

;;;;  type

rule TypeArgument_ok:
  p C |- type : typeIR `# tid_impl*
  -- Type_ok: p C |- type : typeIR `# tid_impl*

;;;;  VOID

rule TypeArgument_ok:
  p C |- VOID : VOID `# eps

;;;;  `_

rule TypeArgument_ok:
  p C |- `_ : (TID tid_impl) `# tid_impl 
  -- if tid_impl = $fresh_tid()

;;; nonTypeName

rule TypeArgument_ok:
  p C |- nonTypeName : (TID tid) `# eps
  -- if tid = $name(nonTypeName)

;;
;; Type argument list typing
;;
;; syntax typeArgumentList
;;

rule TypeArguments_ok:
  p C |- eps : eps `# eps

rule TypeArguments_ok:
  p C |- typeArgument_h :: typeArgument_t*
       : (typeArgumentIR_h :: typeArgumentIR_t*) `# tid_impl*
  -- TypeArgument_ok: p C |- typeArgument_h
                           : typeArgumentIR_h `# tid_impl_h*
  -- TypeArguments_ok: p C |- typeArgument_t*
                            : typeArgumentIR_t* `# tid_impl_t*
  -- if tid_impl* = tid_impl_h* ++ tid_impl_t*
