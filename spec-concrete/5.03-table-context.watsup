;;
;; Table context
;;

syntax matchKey = (typeIR, id)

syntax matchAction = (prefixedNameIR, parameterTypeIR*, argumentListIR)

syntax matchPriority =
  { VALUES int*,
    INIT bool,
    DELTA int,
    LARGEST_WINS bool }

var prt : matchPriority

syntax matchEntry =
  { SIZE int,
    CONST bool }

var ent : matchEntry

syntax matchMode =
  | NOPRI
  | NOPRILPM nat
  | PRI
  | PRILPM

syntax tblctx =
  { KEYS matchKey*,
    ACTIONS matchAction*,
    PRIORITIES matchPriority,
    ENTRIES matchEntry,
    MODE matchMode }

var TC : tblctx

;;
;; State per table entry
;;

syntax tblstate =
  | LPM nat
  | NOLPM

;;
;; Constructor
;;

dec $empty_tblctx: tblctx
def $empty_tblctx
    = { KEYS eps,
        ACTIONS eps,
        PRIORITIES matchPriority,
        ENTRIES matchEntry,
        MODE NOPRI }
  -- if matchPriority
        = { VALUES eps,
            INIT false,
            DELTA 1,
            LARGEST_WINS true }
  -- if matchEntry
        = { SIZE 0,
            CONST true }

;;
;; Adders
;;

;;; Adder for keys

dec $add_key(tblctx, id, typeIR) : tblctx

def $add_key(TC, id, typeIR)
  = TC[ .KEYS = TC.KEYS ++ [ matchKey ] ]
  -- if matchKey = (typeIR, id)

;;; Adder for actions

dec $add_action(tblctx, prefixedNameIR, parameterTypeIR*, argumentListIR) : tblctx

def $add_action(TC, prefixedNameIR, parameterTypeIR*, argumentListIR)
  = TC[ .ACTIONS = TC.ACTIONS ++ [ matchAction ] ]
  -- if matchAction = (prefixedNameIR, parameterTypeIR*, argumentListIR)

;;
;; Updaters
;;

;;; Updater for modes

dec $update_mode(tblctx, id, typeIR) : tblctx

def $update_mode(TC, "lpm", INT `< n >) = TC[ .MODE = NOPRILPM n ]
  -- if TC.MODE = NOPRI
def $update_mode(TC, "lpm", BIT `< n >) = TC[ .MODE = NOPRILPM n ]
  -- if TC.MODE = NOPRI
def $update_mode(TC, "lpm", VARBIT `< n >) = TC[ .MODE = NOPRILPM n ]
  -- if TC.MODE = NOPRI
def $update_mode(TC, "lpm", TYPE _ typeIR)
  = $update_mode(TC, "lpm", typeIR)
def $update_mode(TC, "lpm", _) = TC[ .MODE = PRILPM ]
  -- if TC.MODE = PRI
def $update_mode(TC, "range", _) = TC[ .MODE = PRI ]
  -- if TC.MODE = NOPRI
def $update_mode(TC, "ternary", _) = TC[ .MODE = PRI ]
  -- if TC.MODE = NOPRI
def $update_mode(TC, "optional", _) = TC[ .MODE = PRI ]
  -- if TC.MODE = NOPRI
def $update_mode(TC, "range", _) = TC[ .MODE = PRILPM ]
  -- if TC.MODE = NOPRILPM _
def $update_mode(TC, "ternary", _) = TC[ .MODE = PRILPM ]
  -- if TC.MODE = NOPRILPM _
def $update_mode(TC, "optional", _) = TC[ .MODE = PRILPM ]
  -- if TC.MODE = NOPRILPM _
def $update_mode(TC, _, _) = TC
  -- otherwise

;;
;; Finders
;;

;;; Finder for actions

dec $find_action(tblctx, prefixedNameIR) : (parameterTypeIR*, argumentListIR)?
dec $find_action'(matchAction*, prefixedNameIR) : (parameterTypeIR*, argumentListIR)?

def $find_action(TC, prefixedNameIR) = $find_action'(TC.ACTIONS, prefixedNameIR)

def $find_action'(eps, prefixedNameIR) = eps

def $find_action'(matchAction_h :: matchAction_t*, prefixedNameIR)
  = (parameterTypeIR*, argumentListIR)
  -- if (prefixedNameIR, parameterTypeIR*, argumentListIR) = matchAction_h

def $find_action'(matchAction_h :: matchAction_t*, prefixedNameIR)
  = $find_action'(matchAction_t*, prefixedNameIR)
  -- if (prefixedNameIR_h, _, _) = matchAction_h
  -- if prefixedNameIR_h =/= prefixedNameIR
