;;
;; L-value typing
;;
;; syntax lvalue
;;

;;; referenceExpression
;;; syntax referenceExpression

;;;; prefixedNonTypeName

rule Lvalue_ok/referenceExpression-prefixedNonTypeName-assign:
  p C ASSIGN |- prefixedNonTypeName : prefixedNameIR `# `( typeIR )
  -- if prefixedNameIR = $prefixedNonTypeName(prefixedNonTypeName)
  -- if direction typeIR DYN eps = $find_var(p, C, prefixedNameIR)
  -- if direction = OUT \/ direction = INOUT

rule Lvalue_ok/referenceExpression-prefixedNonTypeName-method:
  p C ROUTINE |- prefixedNonTypeName : prefixedNameIR `# `( typeIR )
  -- if prefixedNameIR = $prefixedNonTypeName(prefixedNonTypeName)
  -- if direction typeIR _ eps = $find_var(p, C, prefixedNameIR)

;;;; THIS
;;;; THIS `= ... is disallowed

;;; lvalue `. member

;;; lvalue `[ expression ]

;;; lvalue `[ expression `: expression ]

;;; `( lvalue )
