;; spec-update/0-aux.watsup:18.1-18.21
def $sum(nat*) : nat =

;; spec-update/0-aux.watsup:19.1-19.21
def $max(nat*) : nat =

;; spec-update/0-aux.watsup:20.1-20.21
def $min(nat*) : nat =

;; spec-update/0-aux.watsup:26.1-27.17
def $int_to_text(int) : text =

;; spec-update/0-aux.watsup:29.1-30.17
def $concat_text(text*) : text =

   ;; spec-update/0-aux.watsup:32.1-32.27
   clause 0(text*{text <- text*}) = ""
      -- if text*{text <- text*} matches []

   ;; spec-update/0-aux.watsup:33.1-33.52
   clause 1(text*{text <- text*}) = t ++ $concat_text(t'*{t' <- t'*})
      -- if text*{text <- text*} matches _ :: _
      -- let t :: t'*{t' <- t'*} = text*{text <- text*}

;; spec-update/0-aux.watsup:35.1-35.37
def $strip_prefix(text, text) : text =

;; spec-update/0-aux.watsup:36.1-36.37
def $strip_suffix(text, text) : text =

;; spec-update/0-aux.watsup:42.1-42.23
def $init_(nat) : nat* =

   ;; spec-update/0-aux.watsup:43.1-43.20
   clause 0(nat) = []
      -- if (nat = 0)

   ;; spec-update/0-aux.watsup:44.1-45.15
   clause 1(n) = (n - 1) :: $init_((n - 1))
      -- otherwise

;; spec-update/0-aux.watsup:47.1-47.29
def $repeat_<X>(X, nat) : X* =

   ;; spec-update/0-aux.watsup:49.1-49.28
   clause 0(X, nat) = []
      -- if (nat = 0)

   ;; spec-update/0-aux.watsup:50.1-51.15
   clause 1(X, n) = [X] ++ $repeat_<X>(X, (n - 1))
      -- otherwise

;; spec-update/0-aux.watsup:53.1-54.26
def $rev_<X>(X*) : X* =

;; spec-update/0-aux.watsup:56.1-57.23
def $concat_<X>(X**) : X* =

;; spec-update/0-aux.watsup:59.1-59.39
def $partition_<X>(X*, nat) : (X*, X*) =

;; spec-update/0-aux.watsup:61.1-62.23
def $assoc_<X, Y>(X, (X, Y)*) : Y? =

;; spec-update/0-aux.watsup:64.1-65.28
def $distinct_<K>(K*) : bool =

;; spec-update/0-aux.watsup:71.17-71.24
syntax set<K> = 
   | ["{"]; ["}"] / K*

;; spec-update/0-aux.watsup:73.1-74.43
def $empty_set<K> : set<K> =

   ;; spec-update/0-aux.watsup:75.1-75.29
   clause 0 = "{" [] "}"

;; spec-update/0-aux.watsup:77.1-78.36
def $in_set<K>(K, set<K>) : bool =

   ;; spec-update/0-aux.watsup:79.1-79.39
   clause 0(K, "{" K'*{K' <- K'*} "}") = K <- K'*{K' <- K'*}

;; spec-update/0-aux.watsup:81.1-82.37
def $intersect_set<K>(set<K>, set<K>) : set<K> =

;; spec-update/0-aux.watsup:84.1-85.37
def $union_set<K>(set<K>, set<K>) : set<K> =

;; spec-update/0-aux.watsup:87.1-88.37
def $unions_set<K>(set<K>*) : set<K> =

;; spec-update/0-aux.watsup:90.1-91.42
def $diff_set<K>(set<K>, set<K>) : set<K> =

;; spec-update/0-aux.watsup:93.1-94.40
def $sub_set<K>(set<K>, set<K>) : bool =

;; spec-update/0-aux.watsup:96.1-97.33
def $eq_set<K>(set<K>, set<K>) : bool =

;; spec-update/0-aux.watsup:103.21-103.27
syntax pair<K, V> = 
   | []; [":"]; [] / K; V

;; spec-update/0-aux.watsup:106.20-106.37
syntax map<K, V> = set<pair<K, V>>

;; spec-update/0-aux.watsup:108.1-109.43
def $empty_map<K, V> : map<K, V> =

   ;; spec-update/0-aux.watsup:111.1-111.32
   clause 0 = "{" [] "}"

;; spec-update/0-aux.watsup:113.1-114.55
def $dom_map<K, V>(map<K, V>) : set<K> =

   ;; spec-update/0-aux.watsup:116.1-116.45
   clause 0("{" K ":" V*{K <- K*, V <- V*} "}") = "{" K*{K <- K*} "}"

;; spec-update/0-aux.watsup:118.1-118.39
def $find_map<K, V>(map<K, V>, K) : V? =

;; spec-update/0-aux.watsup:120.1-120.41
def $find_maps<K, V>(map<K, V>*, K) : V? =

;; spec-update/0-aux.watsup:122.1-122.48
def $add_map<K, V>(map<K, V>, K, V) : map<K, V> =

;; spec-update/0-aux.watsup:124.1-124.51
def $adds_map<K, V>(map<K, V>, K*, V*) : map<K, V> =

;; spec-update/0-aux.watsup:126.1-126.51
def $update_map<K, V>(map<K, V>, K, V) : map<K, V> =

;; spec-update/1-syntax.watsup:6.24-6.33
syntax trailingComma = 
   | [","; "PHTM_0"] / 

;; spec-update/1-syntax.watsup:8.27-8.41
syntax optTrailingComma = trailingComma?

;; spec-update/1-syntax.watsup:10.16-10.21
syntax const = 
   | ["CONST"] / 

;; spec-update/1-syntax.watsup:12.19-12.25
syntax optCONST = const?

;; spec-update/1-syntax.watsup:20.1-22.14
syntax number = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int

;; spec-update/1-syntax.watsup:29.24-29.35
syntax stringLiteral = 
   | []; ["PHTM_2"] / text

;; spec-update/1-syntax.watsup:35.20-35.22
syntax dotPrefix = 
   | ["."] / 

;; spec-update/1-syntax.watsup:38.21-38.28
syntax identifier = 
   | ["$"]; [] / text

;; spec-update/1-syntax.watsup:40.25-40.32
syntax typeIdentifier = 
   | ["@"]; [] / text

;; spec-update/1-syntax.watsup:43.1-45.30
syntax nonTypeName = 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 

;; spec-update/1-syntax.watsup:48.1-49.26
syntax prefixedNonTypeName = 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName

;; spec-update/1-syntax.watsup:51.25-51.36
syntax nonTableKwName = nonTypeName

;; spec-update/1-syntax.watsup:54.1-55.29
syntax prefixedType = 
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier

;; spec-update/1-syntax.watsup:57.19-57.31
syntax typeName = prefixedType

;; spec-update/1-syntax.watsup:60.1-62.19
syntax name = 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | ["LIST"] / 
   | ["@"]; [] / text

;; spec-update/1-syntax.watsup:65.25-65.30
syntax identifierList = name*

;; spec-update/1-syntax.watsup:67.17-67.21
syntax member = name

;; spec-update/1-syntax.watsup:73.20-73.43
syntax direction = 
   | ["IN"] / 
   | ["OUT"] / 
   | ["INOUT"] / 
   | ["NONE"] / 

;; spec-update/1-syntax.watsup:91.1-102.32
syntax baseType = 
   | ["BOOL"] / 
   | ["MATCH_KIND"] / 
   | ["ERROR"] / 
   | ["BIT"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / int
   | ["INT"; "<"]; [">"] / int
   | ["VARBIT"; "<"]; [">"] / int
   | ["BIT"; "<"; "("]; [")"; ">"] / expression
   | ["INT"; "<"; "("]; [")"; ">"] / expression
   | ["VARBIT"; "<"; "("]; [")"; ">"] / expression

;; spec-update/1-syntax.watsup:108.26-108.56
syntax specializedType = 
   | []; ["<"]; [">"] / typeName; typeArgumentList

;; spec-update/1-syntax.watsup:111.1-112.20
syntax namedType = 
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / typeName; typeArgumentList

;; spec-update/1-syntax.watsup:119.1-121.44
syntax headerStackType = 
   | []; ["["]; ["]"] / typeName; expression
   | []; ["["]; ["]"; "PHTM_16"] / specializedType; expression

;; spec-update/1-syntax.watsup:127.19-127.36
syntax listType = 
   | ["LIST"; "<"]; [">"] / typeArg

;; spec-update/1-syntax.watsup:133.20-133.47
syntax tupleType = 
   | ["TUPLE"; "<"]; [">"] / typeArgumentList

;; spec-update/1-syntax.watsup:140.1-144.14
syntax typeRef = 
   | ["BOOL"] / 
   | ["MATCH_KIND"] / 
   | ["ERROR"] / 
   | ["BIT"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / int
   | ["INT"; "<"]; [">"] / int
   | ["VARBIT"; "<"]; [">"] / int
   | ["BIT"; "<"; "("]; [")"; ">"] / expression
   | ["INT"; "<"; "("]; [")"; ">"] / expression
   | ["VARBIT"; "<"; "("]; [")"; ">"] / expression
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / typeName; typeArgumentList
   | []; ["["]; ["]"] / typeName; expression
   | []; ["["]; ["]"; "PHTM_16"] / specializedType; expression
   | ["LIST"; "<"]; [">"] / typeArg
   | ["TUPLE"; "<"]; [">"] / typeArgumentList

;; spec-update/1-syntax.watsup:147.1-148.9
syntax typeOrVoid = 
   | ["BOOL"] / 
   | ["MATCH_KIND"] / 
   | ["ERROR"] / 
   | ["BIT"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / int
   | ["INT"; "<"]; [">"] / int
   | ["VARBIT"; "<"]; [">"] / int
   | ["BIT"; "<"; "("]; [")"; ">"] / expression
   | ["INT"; "<"; "("]; [")"; ">"] / expression
   | ["VARBIT"; "<"; "("]; [")"; ">"] / expression
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / typeName; typeArgumentList
   | []; ["["]; ["]"] / typeName; expression
   | []; ["["]; ["]"; "PHTM_16"] / specializedType; expression
   | ["LIST"; "<"]; [">"] / typeArg
   | ["TUPLE"; "<"]; [">"] / typeArgumentList
   | ["VOID"] / 

;; spec-update/1-syntax.watsup:156.28-156.33
syntax typeParameterList = name*

;; spec-update/1-syntax.watsup:158.25-158.47
syntax typeParameters = 
   | ["<"]; [">"] / typeParameterList

;; spec-update/1-syntax.watsup:160.28-160.43
syntax optTypeParameters = typeParameters?

;; spec-update/1-syntax.watsup:167.1-168.54
syntax parameter = 
   | []; []; []; []; [] / optAnnotations; direction; typeRef; name
   | []; []; []; []; []; [] / optAnnotations; direction; typeRef; name; initializer

;; spec-update/1-syntax.watsup:171.24-171.34
syntax parameterList = parameter*

;; spec-update/1-syntax.watsup:177.32-177.50
syntax constructorParameters = 
   | ["("]; [")"] / parameterList

;; spec-update/1-syntax.watsup:179.35-179.57
syntax optConstructorParameters = constructorParameters?

;; spec-update/1-syntax.watsup:192.1-234.28
syntax nonBraceExpression = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | []; ["["]; ["]"] / nonBraceExpression; expression
   | []; ["["]; [":"]; ["]"] / nonBraceExpression; expression; expression
   | ["("]; [")"] / expression
   | ["!"]; [] / expression
   | ["~"]; [] / expression
   | ["-"]; [] / expression
   | ["+"]; [] / expression
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_5"] / nonBraceExpression; member
   | []; ["*"]; [] / nonBraceExpression; expression
   | []; ["/"]; [] / nonBraceExpression; expression
   | []; ["%"]; [] / nonBraceExpression; expression
   | []; ["+"]; [] / nonBraceExpression; expression
   | []; ["-"]; [] / nonBraceExpression; expression
   | []; ["|+|"]; [] / nonBraceExpression; expression
   | []; ["|-|"]; [] / nonBraceExpression; expression
   | []; ["<<"]; [] / nonBraceExpression; expression
   | []; [">>"]; [] / nonBraceExpression; expression
   | []; ["<="]; [] / nonBraceExpression; expression
   | []; [">="]; [] / nonBraceExpression; expression
   | []; ["<"]; [] / nonBraceExpression; expression
   | []; [">"]; [] / nonBraceExpression; expression
   | []; ["!="]; [] / nonBraceExpression; expression
   | []; ["=="]; [] / nonBraceExpression; expression
   | []; ["&"]; [] / nonBraceExpression; expression
   | []; ["^"]; [] / nonBraceExpression; expression
   | []; ["|"]; [] / nonBraceExpression; expression
   | []; ["++"]; [] / nonBraceExpression; expression
   | []; ["&&"]; [] / nonBraceExpression; expression
   | []; ["||"]; [] / nonBraceExpression; expression
   | []; ["?"]; [":"]; [] / nonBraceExpression; expression; expression
   | []; ["<"]; [">"; "("]; [")"] / nonBraceExpression; realTypeArgumentList; argumentList
   | []; ["("]; [")"] / nonBraceExpression; argumentList
   | []; ["("]; [")"; "PHTM_6"] / namedType; argumentList
   | ["("]; [")"]; [] / typeRef; expression

;; spec-update/1-syntax.watsup:237.1-286.28
syntax expression = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["..."] / 
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | []; ["["]; ["]"] / expression; expression
   | []; ["["]; [":"]; ["]"] / expression; expression; expression
   | ["{"]; []; ["}"] / expressionList; optTrailingComma
   | ["{#}"] / 
   | ["{"]; []; ["}"; "PHTM_7"] / kvList; optTrailingComma
   | ["{"]; [","; "..."]; ["}"] / kvList; optTrailingComma
   | ["("]; [")"] / expression
   | ["!"]; [] / expression
   | ["~"]; [] / expression
   | ["-"]; [] / expression
   | ["+"]; [] / expression
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_8"] / expression; member
   | []; ["*"]; [] / expression; expression
   | []; ["/"]; [] / expression; expression
   | []; ["%"]; [] / expression; expression
   | []; ["+"]; [] / expression; expression
   | []; ["-"]; [] / expression; expression
   | []; ["|+|"]; [] / expression; expression
   | []; ["|-|"]; [] / expression; expression
   | []; ["<<"]; [] / expression; expression
   | []; [">>"]; [] / expression; expression
   | []; ["<="]; [] / expression; expression
   | []; [">="]; [] / expression; expression
   | []; ["<"]; [] / expression; expression
   | []; [">"]; [] / expression; expression
   | []; ["!="]; [] / expression; expression
   | []; ["=="]; [] / expression; expression
   | []; ["&"]; [] / expression; expression
   | []; ["^"]; [] / expression; expression
   | []; ["|"]; [] / expression; expression
   | []; ["++"]; [] / expression; expression
   | []; ["&&"]; [] / expression; expression
   | []; ["||"]; [] / expression; expression
   | []; ["?"]; [":"]; [] / expression; expression; expression
   | []; ["<"]; [">"; "("]; [")"] / expression; realTypeArgumentList; argumentList
   | []; ["("]; [")"] / expression; argumentList
   | []; ["("]; [")"; "PHTM_9"] / namedType; argumentList
   | ["("]; [")"]; [] / typeRef; expression

;; spec-update/1-syntax.watsup:289.25-289.36
syntax expressionList = expression*

;; spec-update/1-syntax.watsup:296.1-300.7
syntax simpleKeysetExpression = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["..."] / 
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | []; ["["]; ["]"] / expression; expression
   | []; ["["]; [":"]; ["]"] / expression; expression; expression
   | ["{"]; []; ["}"] / expressionList; optTrailingComma
   | ["{#}"] / 
   | ["{"]; []; ["}"; "PHTM_7"] / kvList; optTrailingComma
   | ["{"]; [","; "..."]; ["}"] / kvList; optTrailingComma
   | ["("]; [")"] / expression
   | ["!"]; [] / expression
   | ["~"]; [] / expression
   | ["-"]; [] / expression
   | ["+"]; [] / expression
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_8"] / expression; member
   | []; ["*"]; [] / expression; expression
   | []; ["/"]; [] / expression; expression
   | []; ["%"]; [] / expression; expression
   | []; ["+"]; [] / expression; expression
   | []; ["-"]; [] / expression; expression
   | []; ["|+|"]; [] / expression; expression
   | []; ["|-|"]; [] / expression; expression
   | []; ["<<"]; [] / expression; expression
   | []; [">>"]; [] / expression; expression
   | []; ["<="]; [] / expression; expression
   | []; [">="]; [] / expression; expression
   | []; ["<"]; [] / expression; expression
   | []; [">"]; [] / expression; expression
   | []; ["!="]; [] / expression; expression
   | []; ["=="]; [] / expression; expression
   | []; ["&"]; [] / expression; expression
   | []; ["^"]; [] / expression; expression
   | []; ["|"]; [] / expression; expression
   | []; ["++"]; [] / expression; expression
   | []; ["&&"]; [] / expression; expression
   | []; ["||"]; [] / expression; expression
   | []; ["?"]; [":"]; [] / expression; expression; expression
   | []; ["<"]; [">"; "("]; [")"] / expression; realTypeArgumentList; argumentList
   | []; ["("]; [")"] / expression; argumentList
   | []; ["("]; [")"; "PHTM_9"] / namedType; argumentList
   | ["("]; [")"]; [] / typeRef; expression
   | []; ["&&&"]; [] / expression; expression
   | []; [".."]; [] / expression; expression
   | ["DEFAULT"] / 
   | ["_"] / 

;; spec-update/1-syntax.watsup:303.1-306.7
syntax reducedSimpleKeysetExpression = 
   | []; ["&&&"]; [] / expression; expression
   | []; [".."]; [] / expression; expression
   | ["DEFAULT"] / 
   | ["_"] / 

;; spec-update/1-syntax.watsup:309.31-309.54
syntax simpleExpressionList = simpleKeysetExpression*

;; spec-update/1-syntax.watsup:312.1-314.47
syntax tupleKeysetExpression = 
   | ["("]; [","]; [")"] / simpleKeysetExpression; simpleExpressionList
   | ["("]; [")"; "PHTM_19"] / reducedSimpleKeysetExpression

;; spec-update/1-syntax.watsup:317.1-318.27
syntax keysetExpression = 
   | ["("]; [","]; [")"] / simpleKeysetExpression; simpleExpressionList
   | ["("]; [")"; "PHTM_19"] / reducedSimpleKeysetExpression
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["..."] / 
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | []; ["["]; ["]"] / expression; expression
   | []; ["["]; [":"]; ["]"] / expression; expression; expression
   | ["{"]; []; ["}"] / expressionList; optTrailingComma
   | ["{#}"] / 
   | ["{"]; []; ["}"; "PHTM_7"] / kvList; optTrailingComma
   | ["{"]; [","; "..."]; ["}"] / kvList; optTrailingComma
   | ["("]; [")"] / expression
   | ["!"]; [] / expression
   | ["~"]; [] / expression
   | ["-"]; [] / expression
   | ["+"]; [] / expression
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_8"] / expression; member
   | []; ["*"]; [] / expression; expression
   | []; ["/"]; [] / expression; expression
   | []; ["%"]; [] / expression; expression
   | []; ["+"]; [] / expression; expression
   | []; ["-"]; [] / expression; expression
   | []; ["|+|"]; [] / expression; expression
   | []; ["|-|"]; [] / expression; expression
   | []; ["<<"]; [] / expression; expression
   | []; [">>"]; [] / expression; expression
   | []; ["<="]; [] / expression; expression
   | []; [">="]; [] / expression; expression
   | []; ["<"]; [] / expression; expression
   | []; [">"]; [] / expression; expression
   | []; ["!="]; [] / expression; expression
   | []; ["=="]; [] / expression; expression
   | []; ["&"]; [] / expression; expression
   | []; ["^"]; [] / expression; expression
   | []; ["|"]; [] / expression; expression
   | []; ["++"]; [] / expression; expression
   | []; ["&&"]; [] / expression; expression
   | []; ["||"]; [] / expression; expression
   | []; ["?"]; [":"]; [] / expression; expression; expression
   | []; ["<"]; [">"; "("]; [")"] / expression; realTypeArgumentList; argumentList
   | []; ["("]; [")"] / expression; argumentList
   | []; ["("]; [")"; "PHTM_9"] / namedType; argumentList
   | ["("]; [")"]; [] / typeRef; expression
   | []; ["&&&"]; [] / expression; expression
   | []; [".."]; [] / expression; expression
   | ["DEFAULT"] / 
   | ["_"] / 

;; spec-update/1-syntax.watsup:324.17-324.35
syntax kvPair = 
   | []; ["="]; [] / name; expression

;; spec-update/1-syntax.watsup:328.17-328.24
syntax kvList = kvPair*

;; spec-update/1-syntax.watsup:335.1-337.7
syntax realTypeArg = 
   | ["BOOL"] / 
   | ["MATCH_KIND"] / 
   | ["ERROR"] / 
   | ["BIT"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / int
   | ["INT"; "<"]; [">"] / int
   | ["VARBIT"; "<"]; [">"] / int
   | ["BIT"; "<"; "("]; [")"; ">"] / expression
   | ["INT"; "<"; "("]; [")"; ">"] / expression
   | ["VARBIT"; "<"; "("]; [")"; ">"] / expression
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / typeName; typeArgumentList
   | []; ["["]; ["]"] / typeName; expression
   | []; ["["]; ["]"; "PHTM_16"] / specializedType; expression
   | ["LIST"; "<"]; [">"] / typeArg
   | ["TUPLE"; "<"]; [">"] / typeArgumentList
   | ["VOID"] / 
   | ["_"] / 

;; spec-update/1-syntax.watsup:340.31-340.43
syntax realTypeArgumentList = realTypeArg*

;; spec-update/1-syntax.watsup:343.1-346.7
syntax typeArg = 
   | ["BOOL"] / 
   | ["MATCH_KIND"] / 
   | ["ERROR"] / 
   | ["BIT"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / int
   | ["INT"; "<"]; [">"] / int
   | ["VARBIT"; "<"]; [">"] / int
   | ["BIT"; "<"; "("]; [")"; ">"] / expression
   | ["INT"; "<"; "("]; [")"; ">"] / expression
   | ["VARBIT"; "<"; "("]; [")"; ">"] / expression
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / typeName; typeArgumentList
   | []; ["["]; ["]"] / typeName; expression
   | []; ["["]; ["]"; "PHTM_16"] / specializedType; expression
   | ["LIST"; "<"]; [">"] / typeArg
   | ["TUPLE"; "<"]; [">"] / typeArgumentList
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | ["VOID"] / 
   | ["_"] / 

;; spec-update/1-syntax.watsup:349.27-349.35
syntax typeArgumentList = typeArg*

;; spec-update/1-syntax.watsup:356.1-359.15
syntax argument = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["..."] / 
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | []; ["["]; ["]"] / expression; expression
   | []; ["["]; [":"]; ["]"] / expression; expression; expression
   | ["{"]; []; ["}"] / expressionList; optTrailingComma
   | ["{#}"] / 
   | ["{"]; []; ["}"; "PHTM_7"] / kvList; optTrailingComma
   | ["{"]; [","; "..."]; ["}"] / kvList; optTrailingComma
   | ["("]; [")"] / expression
   | ["!"]; [] / expression
   | ["~"]; [] / expression
   | ["-"]; [] / expression
   | ["+"]; [] / expression
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_8"] / expression; member
   | []; ["*"]; [] / expression; expression
   | []; ["/"]; [] / expression; expression
   | []; ["%"]; [] / expression; expression
   | []; ["+"]; [] / expression; expression
   | []; ["-"]; [] / expression; expression
   | []; ["|+|"]; [] / expression; expression
   | []; ["|-|"]; [] / expression; expression
   | []; ["<<"]; [] / expression; expression
   | []; [">>"]; [] / expression; expression
   | []; ["<="]; [] / expression; expression
   | []; [">="]; [] / expression; expression
   | []; ["<"]; [] / expression; expression
   | []; [">"]; [] / expression; expression
   | []; ["!="]; [] / expression; expression
   | []; ["=="]; [] / expression; expression
   | []; ["&"]; [] / expression; expression
   | []; ["^"]; [] / expression; expression
   | []; ["|"]; [] / expression; expression
   | []; ["++"]; [] / expression; expression
   | []; ["&&"]; [] / expression; expression
   | []; ["||"]; [] / expression; expression
   | []; ["?"]; [":"]; [] / expression; expression; expression
   | []; ["<"]; [">"; "("]; [")"] / expression; realTypeArgumentList; argumentList
   | []; ["("]; [")"] / expression; argumentList
   | []; ["("]; [")"; "PHTM_9"] / namedType; argumentList
   | ["("]; [")"]; [] / typeRef; expression
   | []; ["="]; [] / name; expression
   | ["_"] / 
   | []; ["="; "_"] / name

;; spec-update/1-syntax.watsup:362.23-362.32
syntax argumentList = argument*

;; spec-update/1-syntax.watsup:369.1-374.16
syntax lvalue = 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | ["THIS"] / 
   | []; ["."]; [] / lvalue; member
   | []; ["["]; ["]"] / lvalue; expression
   | []; ["["]; [":"]; ["]"] / lvalue; expression; expression
   | ["("]; [")"] / lvalue

;; spec-update/1-syntax.watsup:390.22-390.35
syntax initializer = 
   | ["="]; [] / expression

;; spec-update/1-syntax.watsup:392.25-392.37
syntax optInitializer = initializer?

;; spec-update/1-syntax.watsup:395.3-395.45
syntax variableDeclarationWithoutSemicolon = 
   | []; []; []; []; [] / optAnnotations; typeRef; name; optInitializer

;; spec-update/1-syntax.watsup:398.3-398.41
syntax variableDeclaration = 
   | []; [";"] / variableDeclarationWithoutSemicolon

;; spec-update/1-syntax.watsup:401.3-401.51
syntax constantDeclaration = 
   | []; ["CONST"]; []; []; [";"] / optAnnotations; typeRef; name; initializer

;; spec-update/1-syntax.watsup:408.1-422.26
syntax assignmentOrMethodCallStatementWithoutSemicolon = 
   | []; ["("]; [")"] / lvalue; argumentList
   | []; ["<"]; [">"; "("]; [")"] / lvalue; typeArgumentList; argumentList
   | []; ["="]; [] / lvalue; expression
   | []; ["+="]; [] / lvalue; expression
   | []; ["|+|="]; [] / lvalue; expression
   | []; ["-="]; [] / lvalue; expression
   | []; ["|-|="]; [] / lvalue; expression
   | []; ["*="]; [] / lvalue; expression
   | []; ["/="]; [] / lvalue; expression
   | []; ["%="]; [] / lvalue; expression
   | []; ["<<="]; [] / lvalue; expression
   | []; [">>="]; [] / lvalue; expression
   | []; ["&="]; [] / lvalue; expression
   | []; ["^="]; [] / lvalue; expression
   | []; ["|="]; [] / lvalue; expression

;; spec-update/1-syntax.watsup:425.3-425.61
syntax assignmentOrMethodCallStatement = 
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolon

;; spec-update/1-syntax.watsup:432.1-432.44
syntax directApplication = 
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedType; argumentList

;; spec-update/1-syntax.watsup:439.1-440.48
syntax conditionalStatement = 
   | ["IF"; "("]; [")"]; [] / expression; statement
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expression; statement; statement

;; spec-update/1-syntax.watsup:446.25-446.27
syntax emptyStatement = 
   | [";"] / 

;; spec-update/1-syntax.watsup:452.25-452.59
syntax blockStatement = 
   | []; ["{"]; ["}"] / optAnnotations; statOrDeclList

;; spec-update/1-syntax.watsup:459.1-460.25
syntax returnStatement = 
   | ["RETURN"; ";"] / 
   | ["RETURN"]; [";"] / expression

;; spec-update/1-syntax.watsup:466.25-466.33
syntax breakStatement = 
   | ["BREAK"; ";"] / 

;; spec-update/1-syntax.watsup:472.28-472.39
syntax continueStatement = 
   | ["CONTINUE"; ";"] / 

;; spec-update/1-syntax.watsup:478.24-478.31
syntax exitStatement = 
   | ["EXIT"; ";"] / 

;; spec-update/1-syntax.watsup:485.1-486.23
syntax switchLabel = 
   | ["DEFAULT"] / 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | []; ["["]; ["]"] / nonBraceExpression; expression
   | []; ["["]; [":"]; ["]"] / nonBraceExpression; expression; expression
   | ["("]; [")"] / expression
   | ["!"]; [] / expression
   | ["~"]; [] / expression
   | ["-"]; [] / expression
   | ["+"]; [] / expression
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_5"] / nonBraceExpression; member
   | []; ["*"]; [] / nonBraceExpression; expression
   | []; ["/"]; [] / nonBraceExpression; expression
   | []; ["%"]; [] / nonBraceExpression; expression
   | []; ["+"]; [] / nonBraceExpression; expression
   | []; ["-"]; [] / nonBraceExpression; expression
   | []; ["|+|"]; [] / nonBraceExpression; expression
   | []; ["|-|"]; [] / nonBraceExpression; expression
   | []; ["<<"]; [] / nonBraceExpression; expression
   | []; [">>"]; [] / nonBraceExpression; expression
   | []; ["<="]; [] / nonBraceExpression; expression
   | []; [">="]; [] / nonBraceExpression; expression
   | []; ["<"]; [] / nonBraceExpression; expression
   | []; [">"]; [] / nonBraceExpression; expression
   | []; ["!="]; [] / nonBraceExpression; expression
   | []; ["=="]; [] / nonBraceExpression; expression
   | []; ["&"]; [] / nonBraceExpression; expression
   | []; ["^"]; [] / nonBraceExpression; expression
   | []; ["|"]; [] / nonBraceExpression; expression
   | []; ["++"]; [] / nonBraceExpression; expression
   | []; ["&&"]; [] / nonBraceExpression; expression
   | []; ["||"]; [] / nonBraceExpression; expression
   | []; ["?"]; [":"]; [] / nonBraceExpression; expression; expression
   | []; ["<"]; [">"; "("]; [")"] / nonBraceExpression; realTypeArgumentList; argumentList
   | []; ["("]; [")"] / nonBraceExpression; argumentList
   | []; ["("]; [")"; "PHTM_6"] / namedType; argumentList
   | ["("]; [")"]; [] / typeRef; expression

;; spec-update/1-syntax.watsup:489.1-490.19
syntax switchCase = 
   | []; [":"]; [] / switchLabel; blockStatement
   | []; [":"] / switchLabel

;; spec-update/1-syntax.watsup:493.22-493.33
syntax switchCases = switchCase*

;; spec-update/1-syntax.watsup:495.26-495.65
syntax switchStatement = 
   | ["SWITCH"; "("]; [")"; "{"]; ["}"] / expression; switchCases

;; spec-update/1-syntax.watsup:502.1-503.52
syntax declOrAssignmentOrMethodCallStatement = 
   | []; []; []; []; [] / optAnnotations; typeRef; name; optInitializer
   | []; ["("]; [")"] / lvalue; argumentList
   | []; ["<"]; [">"; "("]; [")"] / lvalue; typeArgumentList; argumentList
   | []; ["="]; [] / lvalue; expression
   | []; ["+="]; [] / lvalue; expression
   | []; ["|+|="]; [] / lvalue; expression
   | []; ["-="]; [] / lvalue; expression
   | []; ["|-|="]; [] / lvalue; expression
   | []; ["*="]; [] / lvalue; expression
   | []; ["/="]; [] / lvalue; expression
   | []; ["%="]; [] / lvalue; expression
   | []; ["<<="]; [] / lvalue; expression
   | []; [">>="]; [] / lvalue; expression
   | []; ["&="]; [] / lvalue; expression
   | []; ["^="]; [] / lvalue; expression
   | []; ["|="]; [] / lvalue; expression

;; spec-update/1-syntax.watsup:507.35-507.73
syntax forInitStatementNonEmpty = declOrAssignmentOrMethodCallStatement*

;; spec-update/1-syntax.watsup:510.28-510.66
syntax forInitStatements = declOrAssignmentOrMethodCallStatement*

;; spec-update/1-syntax.watsup:514.38-514.86
syntax forUpdateStatementsNonEmpty = assignmentOrMethodCallStatementWithoutSemicolon*

;; spec-update/1-syntax.watsup:517.30-517.78
syntax forUpdateStatements = assignmentOrMethodCallStatementWithoutSemicolon*

;; spec-update/1-syntax.watsup:520.1-521.30
syntax forCollectionExpr = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["..."] / 
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | []; ["["]; ["]"] / expression; expression
   | []; ["["]; [":"]; ["]"] / expression; expression; expression
   | ["{"]; []; ["}"] / expressionList; optTrailingComma
   | ["{#}"] / 
   | ["{"]; []; ["}"; "PHTM_7"] / kvList; optTrailingComma
   | ["{"]; [","; "..."]; ["}"] / kvList; optTrailingComma
   | ["("]; [")"] / expression
   | ["!"]; [] / expression
   | ["~"]; [] / expression
   | ["-"]; [] / expression
   | ["+"]; [] / expression
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_8"] / expression; member
   | []; ["*"]; [] / expression; expression
   | []; ["/"]; [] / expression; expression
   | []; ["%"]; [] / expression; expression
   | []; ["+"]; [] / expression; expression
   | []; ["-"]; [] / expression; expression
   | []; ["|+|"]; [] / expression; expression
   | []; ["|-|"]; [] / expression; expression
   | []; ["<<"]; [] / expression; expression
   | []; [">>"]; [] / expression; expression
   | []; ["<="]; [] / expression; expression
   | []; [">="]; [] / expression; expression
   | []; ["<"]; [] / expression; expression
   | []; [">"]; [] / expression; expression
   | []; ["!="]; [] / expression; expression
   | []; ["=="]; [] / expression; expression
   | []; ["&"]; [] / expression; expression
   | []; ["^"]; [] / expression; expression
   | []; ["|"]; [] / expression; expression
   | []; ["++"]; [] / expression; expression
   | []; ["&&"]; [] / expression; expression
   | []; ["||"]; [] / expression; expression
   | []; ["?"]; [":"]; [] / expression; expression; expression
   | []; ["<"]; [">"; "("]; [")"] / expression; realTypeArgumentList; argumentList
   | []; ["("]; [")"] / expression; argumentList
   | []; ["("]; [")"; "PHTM_9"] / namedType; argumentList
   | ["("]; [")"]; [] / typeRef; expression
   | []; [".."]; [] / expression; expression

;; spec-update/1-syntax.watsup:524.1-526.84
syntax forStatement = 
   | []; ["FOR"; "("]; [";"]; [";"]; [")"]; [] / optAnnotations; forInitStatements; expression; forUpdateStatements; statement
   | []; ["FOR"; "("]; []; ["IN"]; [")"]; [] / optAnnotations; typeRef; name; forCollectionExpr; statement
   | []; ["FOR"; "("]; []; []; ["IN"]; [")"]; [] / optAnnotations; annotations; typeRef; name; forCollectionExpr; statement

;; spec-update/1-syntax.watsup:533.1-543.17
syntax statement = 
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolon
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedType; argumentList
   | ["IF"; "("]; [")"]; [] / expression; statement
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expression; statement; statement
   | [";"] / 
   | []; ["{"]; ["}"] / optAnnotations; statOrDeclList
   | ["RETURN"; ";"] / 
   | ["RETURN"]; [";"] / expression
   | ["BREAK"; ";"] / 
   | ["CONTINUE"; ";"] / 
   | ["EXIT"; ";"] / 
   | ["SWITCH"; "("]; [")"; "{"]; ["}"] / expression; switchCases
   | []; ["FOR"; "("]; [";"]; [";"]; [")"]; [] / optAnnotations; forInitStatements; expression; forUpdateStatements; statement
   | []; ["FOR"; "("]; []; ["IN"]; [")"]; [] / optAnnotations; typeRef; name; forCollectionExpr; statement
   | []; ["FOR"; "("]; []; []; ["IN"]; [")"]; [] / optAnnotations; annotations; typeRef; name; forCollectionExpr; statement

;; spec-update/1-syntax.watsup:546.1-548.14
syntax statementOrDeclaration = 
   | []; [";"] / variableDeclarationWithoutSemicolon
   | []; ["CONST"]; []; []; [";"] / optAnnotations; typeRef; name; initializer
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolon
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedType; argumentList
   | ["IF"; "("]; [")"]; [] / expression; statement
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expression; statement; statement
   | [";"] / 
   | []; ["{"]; ["}"] / optAnnotations; statOrDeclList
   | ["RETURN"; ";"] / 
   | ["RETURN"]; [";"] / expression
   | ["BREAK"; ";"] / 
   | ["CONTINUE"; ";"] / 
   | ["EXIT"; ";"] / 
   | ["SWITCH"; "("]; [")"; "{"]; ["}"] / expression; switchCases
   | []; ["FOR"; "("]; [";"]; [";"]; [")"]; [] / optAnnotations; forInitStatements; expression; forUpdateStatements; statement
   | []; ["FOR"; "("]; []; ["IN"]; [")"]; [] / optAnnotations; typeRef; name; forCollectionExpr; statement
   | []; ["FOR"; "("]; []; []; ["IN"]; [")"]; [] / optAnnotations; annotations; typeRef; name; forCollectionExpr; statement

;; spec-update/1-syntax.watsup:551.25-551.48
syntax statOrDeclList = statementOrDeclaration*

;; spec-update/1-syntax.watsup:558.3-558.50
syntax matchKindDeclaration = 
   | ["MATCH_KIND"; "{"]; []; ["}"] / identifierList; optTrailingComma

;; spec-update/1-syntax.watsup:560.27-560.52
syntax errorDeclaration = 
   | ["ERROR"; "{"]; ["}"] / identifierList

;; spec-update/1-syntax.watsup:567.3-567.55
syntax functionPrototype = 
   | []; []; []; ["("]; [")"] / typeOrVoid; name; optTypeParameters; parameterList

;; spec-update/1-syntax.watsup:570.1-572.56
syntax methodPrototype = 
   | []; []; [";"] / optAnnotations; functionPrototype
   | []; ["ABSTRACT"]; [";"] / optAnnotations; functionPrototype
   | []; []; ["("]; [")"; ";"] / optAnnotations; typeIdentifier; parameterList

;; spec-update/1-syntax.watsup:575.27-575.43
syntax methodPrototypes = methodPrototype*

;; spec-update/1-syntax.watsup:578.1-579.47
syntax externDeclaration = 
   | []; ["EXTERN"]; []; ["{"]; ["}"] / optAnnotations; nonTypeName; optTypeParameters; methodPrototypes
   | []; ["EXTERN"]; [";"] / optAnnotations; functionPrototype

;; spec-update/1-syntax.watsup:586.3-586.50
syntax functionDeclaration = 
   | []; []; []; [] / optAnnotations; functionPrototype; blockStatement

;; spec-update/1-syntax.watsup:592.25-592.48
syntax objInitializer = 
   | ["="; "{"]; ["}"] / objDeclarations

;; spec-update/1-syntax.watsup:595.1-596.68
syntax instantiation = 
   | []; []; ["("]; [")"]; [";"] / optAnnotations; typeRef; argumentList; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotations; typeRef; argumentList; name; objInitializer

;; spec-update/1-syntax.watsup:599.1-600.18
syntax objDeclaration = 
   | []; []; []; [] / optAnnotations; functionPrototype; blockStatement
   | []; []; ["("]; [")"]; [";"] / optAnnotations; typeRef; argumentList; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotations; typeRef; argumentList; name; objInitializer

;; spec-update/1-syntax.watsup:603.26-603.41
syntax objDeclarations = objDeclaration*

;; spec-update/1-syntax.watsup:610.3-610.63
syntax actionDeclaration = 
   | []; ["ACTION"]; ["("]; [")"]; [] / optAnnotations; name; parameterList; blockStatement

;; spec-update/1-syntax.watsup:621.3-621.39
syntax keyElement = 
   | []; [":"]; []; [";"] / expression; name; optAnnotations

;; spec-update/1-syntax.watsup:624.25-624.36
syntax keyElementList = keyElement*

;; spec-update/1-syntax.watsup:631.1-632.42
syntax actionRef = 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | []; ["("]; [")"] / prefixedNonTypeName; argumentList

;; spec-update/1-syntax.watsup:634.17-634.44
syntax action = 
   | []; []; [";"] / optAnnotations; actionRef

;; spec-update/1-syntax.watsup:637.21-637.28
syntax actionList = action*

;; spec-update/1-syntax.watsup:644.1-645.35
syntax entryPriority = 
   | ["PRIORITY"; "="]; [":"] / number
   | ["PRIORITY"; "="; "("]; [")"; ":"] / expression

;; spec-update/1-syntax.watsup:648.1-649.62
syntax entry = 
   | []; []; []; [":"]; []; [";"] / optCONST; entryPriority; keysetExpression; actionRef; optAnnotations
   | []; []; [":"]; []; [";"] / optCONST; keysetExpression; actionList; optAnnotations

;; spec-update/1-syntax.watsup:651.22-651.28
syntax entriesList = entry*

;; spec-update/1-syntax.watsup:658.1-661.58
syntax tableProperty = 
   | ["KEY"; "="; "{"]; ["}"] / keyElementList
   | ["ACTIONS"; "="; "{"]; ["}"] / actionList
   | []; []; ["ENTRIES"; "="; "{"]; ["}"] / optAnnotations; optCONST; entriesList
   | []; []; []; []; [";"] / optAnnotations; optCONST; nonTableKwName; initializer

;; spec-update/1-syntax.watsup:664.28-664.42
syntax tablePropertyList = tableProperty*

;; spec-update/1-syntax.watsup:667.3-667.51
syntax tableDeclaration = 
   | []; ["TABLE"]; ["{"]; ["}"] / optAnnotations; name; tablePropertyList

;; spec-update/1-syntax.watsup:673.22-673.36
syntax controlBody = blockStatement

;; spec-update/1-syntax.watsup:676.1-680.24
syntax controlLocalDeclaration = 
   | []; ["CONST"]; []; []; [";"] / optAnnotations; typeRef; name; initializer
   | []; ["ACTION"]; ["("]; [")"]; [] / optAnnotations; name; parameterList; blockStatement
   | []; ["TABLE"]; ["{"]; ["}"] / optAnnotations; name; tablePropertyList
   | []; []; ["("]; [")"]; [";"] / optAnnotations; typeRef; argumentList; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotations; typeRef; argumentList; name; objInitializer
   | []; [";"] / variableDeclarationWithoutSemicolon

;; spec-update/1-syntax.watsup:683.35-683.59
syntax controlLocalDeclarations = controlLocalDeclaration*

;; spec-update/1-syntax.watsup:686.3-686.67
syntax controlTypeDeclaration = 
   | []; ["CONTROL"]; []; ["("]; [")"] / optAnnotations; name; optTypeParameters; parameterList

;; spec-update/1-syntax.watsup:689.3-689.98
syntax controlDeclaration = 
   | []; []; ["{"]; ["APPLY"]; ["}"] / controlTypeDeclaration; optConstructorParameters; controlLocalDeclarations; controlBody

;; spec-update/1-syntax.watsup:696.1-700.74
syntax valueSetDeclaration = 
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"] / optAnnotations; baseType; expression; name
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"; "PHTM_17"] / optAnnotations; tupleType; expression; name
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"; "PHTM_18"] / optAnnotations; typeName; expression; name

;; spec-update/1-syntax.watsup:706.21-706.48
syntax selectCase = 
   | []; [":"]; [";"] / keysetExpression; name

;; spec-update/1-syntax.watsup:709.25-709.36
syntax selectCaseList = selectCase*

;; spec-update/1-syntax.watsup:711.27-711.73
syntax selectExpression = 
   | ["SELECT"; "("]; [")"; "{"]; ["}"] / expressionList; selectCaseList

;; spec-update/1-syntax.watsup:718.1-719.21
syntax stateExpression = 
   | []; [";"] / name
   | ["SELECT"; "("]; [")"; "{"]; ["}"] / expressionList; selectCaseList

;; spec-update/1-syntax.watsup:721.30-721.56
syntax transitionStatement = 
   | ["TRANSITION"]; [] / stateExpression

;; spec-update/1-syntax.watsup:727.31-727.67
syntax parserBlockStatement = 
   | []; ["{"]; ["}"] / optAnnotations; parserStatements

;; spec-update/1-syntax.watsup:730.1-736.25
syntax parserStatement = 
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolon
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedType; argumentList
   | [";"] / 
   | []; [";"] / variableDeclarationWithoutSemicolon
   | []; ["CONST"]; []; []; [";"] / optAnnotations; typeRef; name; initializer
   | []; ["{"]; ["}"] / optAnnotations; parserStatements
   | ["IF"; "("]; [")"]; [] / expression; statement
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expression; statement; statement

;; spec-update/1-syntax.watsup:739.27-739.43
syntax parserStatements = parserStatement*

;; spec-update/1-syntax.watsup:742.3-742.70
syntax parserState = 
   | []; ["STATE"]; ["{"]; []; ["}"] / optAnnotations; name; parserStatements; transitionStatement

;; spec-update/1-syntax.watsup:746.23-746.35
syntax parserStates = parserState*

;; spec-update/1-syntax.watsup:749.3-749.66
syntax parserTypeDeclaration = 
   | []; ["PARSER"]; []; ["("]; [")"] / optAnnotations; name; optTypeParameters; parameterList

;; spec-update/1-syntax.watsup:752.1-755.24
syntax parserLocalElement = 
   | []; ["CONST"]; []; []; [";"] / optAnnotations; typeRef; name; initializer
   | []; [";"] / variableDeclarationWithoutSemicolon
   | []; []; ["("]; [")"]; [";"] / optAnnotations; typeRef; argumentList; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotations; typeRef; argumentList; name; objInitializer
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"] / optAnnotations; baseType; expression; name
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"; "PHTM_17"] / optAnnotations; tupleType; expression; name
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"; "PHTM_18"] / optAnnotations; typeName; expression; name

;; spec-update/1-syntax.watsup:758.30-758.49
syntax parserLocalElements = parserLocalElement*

;; spec-update/1-syntax.watsup:761.3-761.87
syntax parserDeclaration = 
   | []; []; ["{"]; []; ["}"] / parserTypeDeclaration; optConstructorParameters; parserLocalElements; parserStates

;; spec-update/1-syntax.watsup:768.3-768.67
syntax packageTypeDeclaration = 
   | []; ["PACKAGE"]; []; ["("]; [")"] / optAnnotations; name; optTypeParameters; parameterList

;; spec-update/1-syntax.watsup:774.30-774.46
syntax specifiedIdentifier = 
   | []; []; [] / name; initializer

;; spec-update/1-syntax.watsup:777.34-777.54
syntax specifiedIdentifierList = specifiedIdentifier*

;; spec-update/1-syntax.watsup:780.1-781.83
syntax enumDeclaration = 
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotations; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotations; typeRef; name; specifiedIdentifierList; optTrailingComma

;; spec-update/1-syntax.watsup:787.22-787.52
syntax structField = 
   | []; []; []; [";"] / optAnnotations; typeRef; name

;; spec-update/1-syntax.watsup:790.26-790.38
syntax structFieldList = structField*

;; spec-update/1-syntax.watsup:793.3-793.74
syntax headerUnionDeclaration = 
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList

;; spec-update/1-syntax.watsup:796.3-796.68
syntax structTypeDeclaration = 
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList

;; spec-update/1-syntax.watsup:799.3-799.68
syntax headerTypeDeclaration = 
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList

;; spec-update/1-syntax.watsup:806.1-809.20
syntax derivedTypeDeclaration = 
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotations; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotations; typeRef; name; specifiedIdentifierList; optTrailingComma

;; spec-update/1-syntax.watsup:816.1-819.37
syntax typedefDeclaration = 
   | []; ["TYPEDEF"]; []; [] / optAnnotations; typeRef; name
   | []; ["TYPEDEF"]; []; ["PHTM_12"] / optAnnotations; derivedTypeDeclaration; name
   | []; ["TYPE"]; []; [] / optAnnotations; typeRef; name

;; spec-update/1-syntax.watsup:826.1-833.38
syntax typeDeclaration = 
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotations; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotations; typeRef; name; specifiedIdentifierList; optTrailingComma
   | []; [";"] / typedefDeclaration
   | []; [";"; "PHTM_13"] / parserTypeDeclaration
   | []; [";"; "PHTM_14"] / controlTypeDeclaration
   | []; [";"; "PHTM_15"] / packageTypeDeclaration

;; spec-update/1-syntax.watsup:840.1-849.20
syntax declaration = 
   | []; ["CONST"]; []; []; [";"] / optAnnotations; typeRef; name; initializer
   | ["ERROR"; "{"]; ["}"] / identifierList
   | ["MATCH_KIND"; "{"]; []; ["}"] / identifierList; optTrailingComma
   | []; ["EXTERN"]; []; ["{"]; ["}"] / optAnnotations; nonTypeName; optTypeParameters; methodPrototypes
   | []; ["EXTERN"]; [";"] / optAnnotations; functionPrototype
   | []; []; ["("]; [")"]; [";"] / optAnnotations; typeRef; argumentList; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotations; typeRef; argumentList; name; objInitializer
   | []; []; []; [] / optAnnotations; functionPrototype; blockStatement
   | []; ["ACTION"]; ["("]; [")"]; [] / optAnnotations; name; parameterList; blockStatement
   | []; []; ["{"]; []; ["}"] / parserTypeDeclaration; optConstructorParameters; parserLocalElements; parserStates
   | []; []; ["{"]; ["APPLY"]; ["}"] / controlTypeDeclaration; optConstructorParameters; controlLocalDeclarations; controlBody
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotations; name; optTypeParameters; structFieldList
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotations; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotations; typeRef; name; specifiedIdentifierList; optTrailingComma
   | []; [";"] / typedefDeclaration
   | []; [";"; "PHTM_13"] / parserTypeDeclaration
   | []; [";"; "PHTM_14"] / controlTypeDeclaration
   | []; [";"; "PHTM_15"] / packageTypeDeclaration

;; spec-update/1-syntax.watsup:862.1-881.27
syntax annotationToken = 
   | ["UNEXPECTED_TOKEN"] / 
   | ["ABSTRACT"] / 
   | ["ACTION"] / 
   | ["ACTIONS"] / 
   | ["APPLY"] / 
   | ["BOOL"] / 
   | ["BIT"] / 
   | ["BREAK"] / 
   | ["CONST"] / 
   | ["CONTINUE"] / 
   | ["CONTROL"] / 
   | ["DEFAULT"] / 
   | ["ELSE"] / 
   | ["ENTRIES"] / 
   | ["ENUM"] / 
   | ["ERROR"] / 
   | ["EXIT"] / 
   | ["EXTERN"] / 
   | ["FALSE"] / 
   | ["FOR"] / 
   | ["HEADER"] / 
   | ["HEADER_UNION"] / 
   | ["IF"] / 
   | ["IN"] / 
   | ["INOUT"] / 
   | ["INT"] / 
   | ["KEY"] / 
   | ["MATCH_KIND"] / 
   | ["TYPE"] / 
   | ["OUT"] / 
   | ["PARSER"] / 
   | ["PACKAGE"] / 
   | ["PRAGMA"] / 
   | ["RETURN"] / 
   | ["SELECT"] / 
   | ["STATE"] / 
   | ["STRING"] / 
   | ["STRUCT"] / 
   | ["SWITCH"] / 
   | ["TABLE"] / 
   | ["THIS"] / 
   | ["TRANSITION"] / 
   | ["TRUE"] / 
   | ["TUPLE"] / 
   | ["TYPEDEF"] / 
   | ["VARBIT"] / 
   | ["VALUESET"] / 
   | ["LIST"] / 
   | ["VOID"] / 
   | ["_"] / 
   | ["$"]; [] / text
   | ["@"]; [] / text
   | []; ["PHTM_2"] / text
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["&&&"] / 
   | [".."] / 
   | ["<<"] / 
   | ["&&"] / 
   | ["||"] / 
   | ["=="] / 
   | ["!="] / 
   | [">="] / 
   | ["<="] / 
   | ["++"] / 
   | ["+"] / 
   | ["|+|"] / 
   | ["-"] / 
   | ["|-|"] / 
   | ["*"] / 
   | ["/"] / 
   | ["%"] / 
   | ["|"] / 
   | ["&"] / 
   | ["^"] / 
   | ["~"] / 
   | ["["] / 
   | ["]"] / 
   | ["{"] / 
   | ["}"] / 
   | ["<"] / 
   | [">"] / 
   | ["!"] / 
   | [":"] / 
   | [","; "PHTM_21"] / 
   | ["?"] / 
   | ["."] / 
   | ["="] / 
   | [";"] / 
   | ["@"] / 

;; spec-update/1-syntax.watsup:884.1-885.20
syntax simpleAnnotation = 
   | ["("]; [")"] / simpleAnnotationBody
   | ["UNEXPECTED_TOKEN"] / 
   | ["ABSTRACT"] / 
   | ["ACTION"] / 
   | ["ACTIONS"] / 
   | ["APPLY"] / 
   | ["BOOL"] / 
   | ["BIT"] / 
   | ["BREAK"] / 
   | ["CONST"] / 
   | ["CONTINUE"] / 
   | ["CONTROL"] / 
   | ["DEFAULT"] / 
   | ["ELSE"] / 
   | ["ENTRIES"] / 
   | ["ENUM"] / 
   | ["ERROR"] / 
   | ["EXIT"] / 
   | ["EXTERN"] / 
   | ["FALSE"] / 
   | ["FOR"] / 
   | ["HEADER"] / 
   | ["HEADER_UNION"] / 
   | ["IF"] / 
   | ["IN"] / 
   | ["INOUT"] / 
   | ["INT"] / 
   | ["KEY"] / 
   | ["MATCH_KIND"] / 
   | ["TYPE"] / 
   | ["OUT"] / 
   | ["PARSER"] / 
   | ["PACKAGE"] / 
   | ["PRAGMA"] / 
   | ["RETURN"] / 
   | ["SELECT"] / 
   | ["STATE"] / 
   | ["STRING"] / 
   | ["STRUCT"] / 
   | ["SWITCH"] / 
   | ["TABLE"] / 
   | ["THIS"] / 
   | ["TRANSITION"] / 
   | ["TRUE"] / 
   | ["TUPLE"] / 
   | ["TYPEDEF"] / 
   | ["VARBIT"] / 
   | ["VALUESET"] / 
   | ["LIST"] / 
   | ["VOID"] / 
   | ["_"] / 
   | ["$"]; [] / text
   | ["@"]; [] / text
   | []; ["PHTM_2"] / text
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["&&&"] / 
   | [".."] / 
   | ["<<"] / 
   | ["&&"] / 
   | ["||"] / 
   | ["=="] / 
   | ["!="] / 
   | [">="] / 
   | ["<="] / 
   | ["++"] / 
   | ["+"] / 
   | ["|+|"] / 
   | ["-"] / 
   | ["|-|"] / 
   | ["*"] / 
   | ["/"] / 
   | ["%"] / 
   | ["|"] / 
   | ["&"] / 
   | ["^"] / 
   | ["~"] / 
   | ["["] / 
   | ["]"] / 
   | ["{"] / 
   | ["}"] / 
   | ["<"] / 
   | [">"] / 
   | ["!"] / 
   | [":"] / 
   | [","; "PHTM_21"] / 
   | ["?"] / 
   | ["."] / 
   | ["="] / 
   | [";"] / 
   | ["@"] / 

;; spec-update/1-syntax.watsup:888.31-888.48
syntax simpleAnnotationBody = simpleAnnotation*

;; spec-update/1-syntax.watsup:891.1-893.36
syntax structuredAnnotationBody = 
   | []; []; [] / expressionList; optTrailingComma
   | []; []; ["PHTM_20"] / kvList; optTrailingComma

;; spec-update/1-syntax.watsup:896.1-898.42
syntax annotation = 
   | ["@"]; [] / name
   | ["@"]; ["("]; [")"] / name; simpleAnnotationBody
   | ["@"]; ["["]; ["]"] / name; structuredAnnotationBody

;; spec-update/1-syntax.watsup:901.22-901.33
syntax annotations = annotation*

;; spec-update/1-syntax.watsup:903.25-903.37
syntax optAnnotations = annotations?

;; spec-update/1-syntax.watsup:910.20-910.32
syntax p4program = declaration*

;; spec-update/2.0-domain.watsup:9.19-9.37
syntax funcName = 
   | []; []; [] / name; (name, bool)*

;; spec-update/2.0-domain.watsup:15.19-15.27
syntax consName = funcName

;; spec-update/2.1-value.watsup:18.1-21.16
syntax primVal = 
   | ["BOOL"]; [] / bool
   | ["ERROR"; "."]; [] / name
   | ["MATCH_KIND"]; [] / name
   | ["STRING"]; [] / text

;; spec-update/2.1-value.watsup:28.1-31.24
syntax numVal = 
   | ["INT"]; [] / int
   | ["BIT"; "<"]; [">"]; [] / nat; int
   | ["INT"; "<"]; [">"]; [] / nat; int
   | ["VARBIT"; "<"]; [">"]; [] / nat; int

;; spec-update/2.1-value.watsup:33.18-33.36
syntax baseVal = 
   | ["BOOL"]; [] / bool
   | ["ERROR"; "."]; [] / name
   | ["MATCH_KIND"]; [] / name
   | ["STRING"]; [] / text
   | ["INT"]; [] / int
   | ["BIT"; "<"]; [">"]; [] / nat; int
   | ["INT"; "<"]; [">"]; [] / nat; int
   | ["VARBIT"; "<"]; [">"]; [] / nat; int

;; spec-update/2.1-value.watsup:40.1-47.29
syntax dataVal = 
   | ["LIST"; "["]; ["]"] / val*
   | ["TUPLE"; "("]; [")"] / val*
   | ["["]; ["@"; "("]; [";"]; [")"; "]"] / val*; nat; nat
   | ["HEADER"]; ["{"]; ["}"] / name; (val, name)*
   | ["HEADER_UNION"]; ["{"]; ["}"] / name; (val, name)*
   | ["STRUCT"]; ["{"]; ["}"] / name; (val, name)*
   | ["ENUM"]; ["."]; [] / name; name
   | ["ENUM"]; ["."]; ["#"]; [] / name; name; val

;; spec-update/2.1-value.watsup:54.1-56.21
syntax setVal = 
   | ["{"]; ["}"] / val
   | ["{"]; ["&&&"]; ["}"] / val; val
   | ["{"]; [".."]; ["}"] / val; val

;; spec-update/2.1-value.watsup:59.1-68.40
syntax synthVal = 
   | ["DEFAULT"] / 
   | ["SEQ"; "("]; [")"] / val*
   | ["SEQ_DEFAULT"; "("]; [")"] / val*
   | ["RECORD"; "{"]; ["}"] / (val, name)*
   | ["RECORD_DEFAULT"; "{"]; ["}"] / (val, name)*
   | ["INVALID"] / 
   | ["SET"]; [] / setVal
   | ["STATE"] / 
   | ["ENUM_TABLE"]; ["."]; [] / name; name
   | ["STRUCT_TABLE"]; ["{"]; ["}"] / name; (val, name)*

;; spec-update/2.1-value.watsup:70.14-70.44
syntax val = 
   | ["BOOL"]; [] / bool
   | ["ERROR"; "."]; [] / name
   | ["MATCH_KIND"]; [] / name
   | ["STRING"]; [] / text
   | ["INT"]; [] / int
   | ["BIT"; "<"]; [">"]; [] / nat; int
   | ["INT"; "<"]; [">"]; [] / nat; int
   | ["VARBIT"; "<"]; [">"]; [] / nat; int
   | ["LIST"; "["]; ["]"] / val*
   | ["TUPLE"; "("]; [")"] / val*
   | ["["]; ["@"; "("]; [";"]; [")"; "]"] / val*; nat; nat
   | ["HEADER"]; ["{"]; ["}"] / name; (val, name)*
   | ["HEADER_UNION"]; ["{"]; ["}"] / name; (val, name)*
   | ["STRUCT"]; ["{"]; ["}"] / name; (val, name)*
   | ["ENUM"]; ["."]; [] / name; name
   | ["ENUM"]; ["."]; ["#"]; [] / name; name; val
   | ["DEFAULT"] / 
   | ["SEQ"; "("]; [")"] / val*
   | ["SEQ_DEFAULT"; "("]; [")"] / val*
   | ["RECORD"; "{"]; ["}"] / (val, name)*
   | ["RECORD_DEFAULT"; "{"]; ["}"] / (val, name)*
   | ["INVALID"] / 
   | ["SET"]; [] / setVal
   | ["STATE"] / 
   | ["ENUM_TABLE"]; ["."]; [] / name; name
   | ["STRUCT_TABLE"]; ["{"]; ["}"] / name; (val, name)*

;; spec-update/2.2-type.watsup:13.22-13.48
syntax paramTypeIR = 
   | []; []; []; []; [] / name; direction; typeIR; val?

;; spec-update/2.2-type.watsup:24.1-28.11
syntax primTypeIR = 
   | ["VOID"] / 
   | ["BOOL"] / 
   | ["ERROR"] / 
   | ["MATCH_KIND"] / 
   | ["STRING"] / 

;; spec-update/2.2-type.watsup:35.1-38.20
syntax numTypeIR = 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / nat
   | ["INT"; "<"]; [">"] / nat
   | ["VARBIT"; "<"]; [">"] / nat

;; spec-update/2.2-type.watsup:40.21-40.45
syntax baseTypeIR = 
   | ["VOID"] / 
   | ["BOOL"] / 
   | ["ERROR"] / 
   | ["MATCH_KIND"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / nat
   | ["INT"; "<"]; [">"] / nat
   | ["VARBIT"; "<"]; [">"] / nat

;; spec-update/2.2-type.watsup:47.1-48.31
syntax namedTypeIR = 
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / polyTypeDefIR; typeIR*

;; spec-update/2.2-type.watsup:59.1-60.21
syntax typedefTypeIR = 
   | ["TYPEDEF"]; []; [] / name; typeIR
   | ["TYPE"]; []; [] / name; typeIR

;; spec-update/2.2-type.watsup:67.1-74.39
syntax dataTypeIR = 
   | ["LIST"; "<"]; [">"] / typeIR
   | ["TUPLE"; "<"]; [">"] / typeIR*
   | []; ["["]; ["]"] / typeIR; nat
   | ["HEADER"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["HEADER_UNION"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["STRUCT"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["ENUM"]; ["{"]; ["}"] / name; name*
   | ["ENUM"]; []; ["{"]; ["}"] / typeIR; name; (name, val)*

;; spec-update/2.2-type.watsup:81.1-85.27
syntax objTypeIR = 
   | ["EXTERN"]; []; [] / name; map<funcName, funcTypeDefIR>
   | ["PARSER"; "("]; [")"] / paramTypeIR
   | ["CONTROL"; "("]; [")"] / paramTypeIR
   | ["PACKAGE"; "<"]; [">"] / typeIR*
   | ["TABLE"]; ["{"]; ["}"] / name; typeIR

;; spec-update/2.2-type.watsup:88.1-90.14
syntax defTypeIR = 
   | ["TYPEDEF"]; []; [] / name; typeIR
   | ["TYPE"]; []; [] / name; typeIR
   | ["LIST"; "<"]; [">"] / typeIR
   | ["TUPLE"; "<"]; [">"] / typeIR*
   | []; ["["]; ["]"] / typeIR; nat
   | ["HEADER"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["HEADER_UNION"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["STRUCT"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["ENUM"]; ["{"]; ["}"] / name; name*
   | ["ENUM"]; []; ["{"]; ["}"] / typeIR; name; (name, val)*
   | ["EXTERN"]; []; [] / name; map<funcName, funcTypeDefIR>
   | ["PARSER"; "("]; [")"] / paramTypeIR
   | ["CONTROL"; "("]; [")"] / paramTypeIR
   | ["PACKAGE"; "<"]; [">"] / typeIR*
   | ["TABLE"]; ["{"]; ["}"] / name; typeIR

;; spec-update/2.2-type.watsup:97.1-107.7
syntax synthTypeIR = 
   | ["DEFAULT"] / 
   | ["SEQ"; "<"]; [">"] / typeIR*
   | ["SEQ_DEFAULT"; "<"]; [">"] / typeIR*
   | ["RECORD"; "{"]; ["}"] / (typeIR, name)*
   | ["RECORD_DEFAULT"; "{"]; ["}"] / (typeIR, name)*
   | ["INVALID"] / 
   | ["SET"; "<"]; [">"] / typeIR*
   | ["STATE"] / 
   | ["ENUM_TABLE"]; ["{"]; ["}"] / name; name*
   | ["STRUCT_TABLE"]; [] / name
   | ["_"] / 

;; spec-update/2.2-type.watsup:109.17-109.69
syntax typeIR = 
   | ["VOID"] / 
   | ["BOOL"] / 
   | ["ERROR"] / 
   | ["MATCH_KIND"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / nat
   | ["INT"; "<"]; [">"] / nat
   | ["VARBIT"; "<"]; [">"] / nat
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / polyTypeDefIR; typeIR*
   | ["TYPEDEF"]; []; [] / name; typeIR
   | ["TYPE"]; []; [] / name; typeIR
   | ["LIST"; "<"]; [">"] / typeIR
   | ["TUPLE"; "<"]; [">"] / typeIR*
   | []; ["["]; ["]"] / typeIR; nat
   | ["HEADER"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["HEADER_UNION"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["STRUCT"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["ENUM"]; ["{"]; ["}"] / name; name*
   | ["ENUM"]; []; ["{"]; ["}"] / typeIR; name; (name, val)*
   | ["EXTERN"]; []; [] / name; map<funcName, funcTypeDefIR>
   | ["PARSER"; "("]; [")"] / paramTypeIR
   | ["CONTROL"; "("]; [")"] / paramTypeIR
   | ["PACKAGE"; "<"]; [">"] / typeIR*
   | ["TABLE"]; ["{"]; ["}"] / name; typeIR
   | ["DEFAULT"] / 
   | ["SEQ"; "<"]; [">"] / typeIR*
   | ["SEQ_DEFAULT"; "<"]; [">"] / typeIR*
   | ["RECORD"; "{"]; ["}"] / (typeIR, name)*
   | ["RECORD_DEFAULT"; "{"]; ["}"] / (typeIR, name)*
   | ["INVALID"] / 
   | ["SET"; "<"]; [">"] / typeIR*
   | ["STATE"] / 
   | ["ENUM_TABLE"]; ["{"]; ["}"] / name; name*
   | ["STRUCT_TABLE"]; [] / name
   | ["_"] / 

;; spec-update/2.2-type.watsup:115.24-115.30
syntax monoTypeDefIR = typeIR

;; spec-update/2.2-type.watsup:117.24-117.54
syntax polyTypeDefIR = 
   | ["<"]; [","]; [">"; "=>"]; [] / name*; name*; typeIR

;; spec-update/2.2-type.watsup:119.20-119.51
syntax typeDefIR = 
   | ["VOID"] / 
   | ["BOOL"] / 
   | ["ERROR"] / 
   | ["MATCH_KIND"] / 
   | ["STRING"] / 
   | ["INT"] / 
   | ["BIT"; "<"]; [">"] / nat
   | ["INT"; "<"]; [">"] / nat
   | ["VARBIT"; "<"]; [">"] / nat
   | ["@"]; [] / text
   | []; []; [] / dotPrefix; typeIdentifier
   | []; ["<"]; [">"] / polyTypeDefIR; typeIR*
   | ["TYPEDEF"]; []; [] / name; typeIR
   | ["TYPE"]; []; [] / name; typeIR
   | ["LIST"; "<"]; [">"] / typeIR
   | ["TUPLE"; "<"]; [">"] / typeIR*
   | []; ["["]; ["]"] / typeIR; nat
   | ["HEADER"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["HEADER_UNION"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["STRUCT"]; ["<"]; [">"; "{"]; ["}"] / name; name*; (typeIR, name)*
   | ["ENUM"]; ["{"]; ["}"] / name; name*
   | ["ENUM"]; []; ["{"]; ["}"] / typeIR; name; (name, val)*
   | ["EXTERN"]; []; [] / name; map<funcName, funcTypeDefIR>
   | ["PARSER"; "("]; [")"] / paramTypeIR
   | ["CONTROL"; "("]; [")"] / paramTypeIR
   | ["PACKAGE"; "<"]; [">"] / typeIR*
   | ["TABLE"]; ["{"]; ["}"] / name; typeIR
   | ["DEFAULT"] / 
   | ["SEQ"; "<"]; [">"] / typeIR*
   | ["SEQ_DEFAULT"; "<"]; [">"] / typeIR*
   | ["RECORD"; "{"]; ["}"] / (typeIR, name)*
   | ["RECORD_DEFAULT"; "{"]; ["}"] / (typeIR, name)*
   | ["INVALID"] / 
   | ["SET"; "<"]; [">"] / typeIR*
   | ["STATE"] / 
   | ["ENUM_TABLE"]; ["{"]; ["}"] / name; name*
   | ["STRUCT_TABLE"]; [] / name
   | ["_"] / 
   | ["<"]; [","]; [">"; "=>"]; [] / name*; name*; typeIR

;; spec-update/2.2-type.watsup:126.1-134.26
syntax funcTypeIR = 
   | ["ACTION"; "("]; [")"] / paramTypeIR
   | ["EXTERN_FUNC"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["FUNC"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["BUILTIN"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["EXTERN_METHOD"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["EXTERN_ABSTRACT_METHOD"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["PARSER_APPLY"; "("]; [")"] / paramTypeIR
   | ["CONTROL_APPLY"; "("]; [")"] / paramTypeIR
   | ["TABLE_APPLY"; "->"]; [] / typeIR

;; spec-update/2.2-type.watsup:140.28-140.38
syntax monoFuncTypeDefIR = funcTypeIR

;; spec-update/2.2-type.watsup:142.28-142.62
syntax polyFuncTypeDefIR = 
   | ["<"]; [","]; [">"; "=>"]; [] / name*; name*; funcTypeIR

;; spec-update/2.2-type.watsup:144.24-144.63
syntax funcTypeDefIR = 
   | ["ACTION"; "("]; [")"] / paramTypeIR
   | ["EXTERN_FUNC"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["FUNC"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["BUILTIN"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["EXTERN_METHOD"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["EXTERN_ABSTRACT_METHOD"; "("]; [")"; "->"]; [] / paramTypeIR; typeIR
   | ["PARSER_APPLY"; "("]; [")"] / paramTypeIR
   | ["CONTROL_APPLY"; "("]; [")"] / paramTypeIR
   | ["TABLE_APPLY"; "->"]; [] / typeIR
   | ["<"]; [","]; [">"; "=>"]; [] / name*; name*; funcTypeIR

;; spec-update/2.2-type.watsup:150.21-150.47
syntax consTypeIR = 
   | ["("]; [")"; "->"]; [] / paramTypeIR; typeIR

;; spec-update/2.2-type.watsup:156.24-156.58
syntax consTypeDefIR = 
   | ["<"]; [","]; [">"; "=>"]; [] / name*; name*; consTypeIR

;; spec-update/2.3-ctk.watsup:5.14-5.30
syntax ctk = 
   | ["LCTK"] / 
   | ["CTK"] / 
   | ["DYN"] / 

;; spec-update/2.3-ctk.watsup:7.1-7.30
def $join_ctk(ctk, ctk) : ctk =

   ;; spec-update/2.3-ctk.watsup:9.1-9.33
   clause 0(ctk, ctk') = "LCTK"
      -- if ctk matches `LCTK`
      -- if ctk' matches `LCTK`

   ;; spec-update/2.3-ctk.watsup:10.1-10.31
   clause 1(ctk, ctk') = "CTK"
      -- if ctk matches `LCTK`
      -- if ctk' matches `CTK`

   ;; spec-update/2.3-ctk.watsup:11.1-11.31
   clause 2(ctk, ctk') = "CTK"
      -- if ctk matches `CTK`
      -- if ctk' matches `LCTK`

   ;; spec-update/2.3-ctk.watsup:12.1-12.30
   clause 3(ctk, ctk') = "CTK"
      -- if ctk matches `CTK`
      -- if ctk' matches `CTK`

   ;; spec-update/2.3-ctk.watsup:13.1-14.15
   clause 4(ctk_a, ctk_b) = "DYN"
      -- otherwise

;; spec-update/2.3-ctk.watsup:16.1-16.27
def $joins_ctk(ctk*) : ctk =

   ;; spec-update/2.3-ctk.watsup:18.1-18.26
   clause 0(ctk*{ctk <- ctk*}) = "DYN"
      -- if ctk*{ctk <- ctk*} matches []

   ;; spec-update/2.3-ctk.watsup:19.1-19.26
   clause 1(ctk'*{ctk' <- ctk'*}) = ctk
      -- if ctk'*{ctk' <- ctk'*} matches [ _/1 ]
      -- let [ctk] = ctk'*{ctk' <- ctk'*}

   ;; spec-update/2.3-ctk.watsup:20.1-20.57
   clause 2(ctk'*{ctk' <- ctk'*}) = $join_ctk(ctk_a, ctk_b)
      -- if ctk'*{ctk' <- ctk'*} matches _ :: _
      -- let ctk_a :: ctk*{ctk <- ctk*} = ctk'*{ctk' <- ctk'*}
      -- if ctk*{ctk <- ctk*} matches [ _/1 ]
      -- let [ctk_b] = ctk*{ctk <- ctk*}

   ;; spec-update/2.3-ctk.watsup:21.1-22.40
   clause 3(ctk'*{ctk' <- ctk'*}) = $joins_ctk(ctk_d :: ctk_c*{ctk_c <- ctk_c*})
      -- if ctk'*{ctk' <- ctk'*} matches _ :: _
      -- let ctk_a :: ctk*{ctk <- ctk*} = ctk'*{ctk' <- ctk'*}
      -- if ctk*{ctk <- ctk*} matches _ :: _
      -- let ctk_b :: ctk_c*{ctk_c <- ctk_c*} = ctk*{ctk <- ctk*}
      -- let ctk_d = $join_ctk(ctk_a, ctk_b)

;; spec-update/2.4-syntax.ir.watsup:10.1-11.40
syntax parameterIR = 
   | []; []; []; [] / direction; typeIR; name
   | []; []; []; []; [] / direction; typeIR; name; initializerIR

;; spec-update/2.4-syntax.ir.watsup:13.26-13.38
syntax parameterListIR = parameterIR*

;; spec-update/2.4-syntax.ir.watsup:19.34-19.54
syntax constructorParametersIR = 
   | ["("]; [")"] / parameterListIR

;; spec-update/2.4-syntax.ir.watsup:21.37-21.61
syntax optConstructorParametersIR = constructorParametersIR?

;; spec-update/2.4-syntax.ir.watsup:35.17-35.35
syntax noteIL = 
   | ["("]; [";"]; [")"] / typeIR; ctk

;; spec-update/2.4-syntax.ir.watsup:37.31-37.63
syntax nonBraceExpressionIR = 
   | []; []; [] / nonBraceExpressionInnerIR; noteIL

;; spec-update/2.4-syntax.ir.watsup:40.1-82.29
syntax nonBraceExpressionInnerIR = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | []; ["["]; ["]"] / nonBraceExpressionIR; expressionIR
   | []; ["["]; [":"]; ["]"] / nonBraceExpressionIR; expressionIR; expressionIR
   | ["("]; [")"] / expressionIR
   | ["!"]; [] / expressionIR
   | ["~"]; [] / expressionIR
   | ["-"]; [] / expressionIR
   | ["+"]; [] / expressionIR
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_5"] / nonBraceExpressionIR; member
   | []; ["*"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["/"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["%"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["+"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["-"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["|+|"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["|-|"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["<<"]; [] / nonBraceExpressionIR; expressionIR
   | []; [">>"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["<="]; [] / nonBraceExpressionIR; expressionIR
   | []; [">="]; [] / nonBraceExpressionIR; expressionIR
   | []; ["<"]; [] / nonBraceExpressionIR; expressionIR
   | []; [">"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["!="]; [] / nonBraceExpressionIR; expressionIR
   | []; ["=="]; [] / nonBraceExpressionIR; expressionIR
   | []; ["&"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["^"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["|"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["++"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["&&"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["||"]; [] / nonBraceExpressionIR; expressionIR
   | []; ["?"]; [":"]; [] / nonBraceExpressionIR; expressionIR; expressionIR
   | []; ["<"]; [">"; "("]; [")"] / nonBraceExpressionIR; typeArgumentListIR; argumentListIR
   | []; ["("]; [")"] / nonBraceExpressionIR; argumentListIR
   | []; ["("]; [")"; "PHTM_6"] / namedTypeIR; argumentListIR
   | ["("]; [")"]; [] / typeIR; expressionIR

;; spec-update/2.4-syntax.ir.watsup:85.23-85.47
syntax expressionIR = 
   | []; []; [] / expressionInnerIR; noteIL

;; spec-update/2.4-syntax.ir.watsup:88.1-137.29
syntax expressionInnerIR = 
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["..."] / 
   | []; ["PHTM_2"] / text
   | ["TRUE"] / 
   | ["FALSE"] / 
   | ["THIS"] / 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | []; ["["]; ["]"] / expressionIR; expressionIR
   | []; ["["]; [":"]; ["]"] / expressionIR; expressionIR; expressionIR
   | ["{"]; []; ["}"] / expressionListIR; optTrailingComma
   | ["{#}"] / 
   | ["{"]; []; ["}"; "PHTM_7"] / kvListIR; optTrailingComma
   | ["{"]; [","; "..."]; ["}"] / kvListIR; optTrailingComma
   | ["("]; [")"] / expressionIR
   | ["!"]; [] / expressionIR
   | ["~"]; [] / expressionIR
   | ["-"]; [] / expressionIR
   | ["+"]; [] / expressionIR
   | []; ["."]; [] / typeName; member
   | ["ERROR"; "."]; [] / member
   | []; ["."]; ["PHTM_8"] / expressionIR; member
   | []; ["*"]; [] / expressionIR; expressionIR
   | []; ["/"]; [] / expressionIR; expressionIR
   | []; ["%"]; [] / expressionIR; expressionIR
   | []; ["+"]; [] / expressionIR; expressionIR
   | []; ["-"]; [] / expressionIR; expressionIR
   | []; ["|+|"]; [] / expressionIR; expressionIR
   | []; ["|-|"]; [] / expressionIR; expressionIR
   | []; ["<<"]; [] / expressionIR; expressionIR
   | []; [">>"]; [] / expressionIR; expressionIR
   | []; ["<="]; [] / expressionIR; expressionIR
   | []; [">="]; [] / expressionIR; expressionIR
   | []; ["<"]; [] / expressionIR; expressionIR
   | []; [">"]; [] / expressionIR; expressionIR
   | []; ["!="]; [] / expressionIR; expressionIR
   | []; ["=="]; [] / expressionIR; expressionIR
   | []; ["&"]; [] / expressionIR; expressionIR
   | []; ["^"]; [] / expressionIR; expressionIR
   | []; ["|"]; [] / expressionIR; expressionIR
   | []; ["++"]; [] / expressionIR; expressionIR
   | []; ["&&"]; [] / expressionIR; expressionIR
   | []; ["||"]; [] / expressionIR; expressionIR
   | []; ["?"]; [":"]; [] / expressionIR; expressionIR; expressionIR
   | []; ["<"]; [">"; "("]; [")"] / expressionIR; typeArgumentListIR; argumentListIR
   | []; ["("]; [")"] / expressionIR; argumentListIR
   | []; ["("]; [")"; "PHTM_9"] / namedTypeIR; argumentListIR
   | ["("]; [")"]; [] / typeIR; expressionIR

;; spec-update/2.4-syntax.ir.watsup:140.27-140.40
syntax expressionListIR = expressionIR*

;; spec-update/2.4-syntax.ir.watsup:147.1-151.7
syntax simpleKeysetExpressionIR = 
   | []; []; [] / expressionInnerIR; noteIL
   | []; ["&&&"]; [] / expressionIR; expressionIR
   | []; [".."]; [] / expressionIR; expressionIR
   | ["DEFAULT"] / 
   | ["_"] / 

;; spec-update/2.4-syntax.ir.watsup:154.1-157.7
syntax reducedSimpleKeysetExpressionIR = 
   | []; ["&&&"]; [] / expressionIR; expressionIR
   | []; [".."]; [] / expressionIR; expressionIR
   | ["DEFAULT"] / 
   | ["_"] / 

;; spec-update/2.4-syntax.ir.watsup:159.33-159.58
syntax simpleExpressionListIR = simpleKeysetExpressionIR*

;; spec-update/2.4-syntax.ir.watsup:162.1-163.49
syntax tupleKeySetExpressionIR = 
   | ["("]; [","]; [")"] / simpleKeysetExpressionIR; simpleExpressionListIR
   | ["("]; [")"; "PHTM_19"] / reducedSimpleKeysetExpressionIR

;; spec-update/2.4-syntax.ir.watsup:166.1-167.29
syntax keysetExpressionIR = 
   | ["("]; [","]; [")"] / simpleKeysetExpressionIR; simpleExpressionListIR
   | ["("]; [")"; "PHTM_19"] / reducedSimpleKeysetExpressionIR
   | []; []; [] / expressionInnerIR; noteIL
   | []; ["&&&"]; [] / expressionIR; expressionIR
   | []; [".."]; [] / expressionIR; expressionIR
   | ["DEFAULT"] / 
   | ["_"] / 

;; spec-update/2.4-syntax.ir.watsup:173.19-173.39
syntax kvPairIR = 
   | []; ["="]; [] / name; expressionIR

;; spec-update/2.4-syntax.ir.watsup:175.19-175.28
syntax kvListIR = kvPairIR*

;; spec-update/2.4-syntax.ir.watsup:181.20-181.26
syntax typeArgIR = typeIR

;; spec-update/2.4-syntax.ir.watsup:183.29-183.39
syntax typeArgumentListIR = typeArgIR*

;; spec-update/2.4-syntax.ir.watsup:190.1-193.15
syntax argumentIR = 
   | []; []; [] / expressionInnerIR; noteIL
   | []; ["="]; [] / name; expressionIR
   | ["_"] / 
   | []; ["="; "_"] / name

;; spec-update/2.4-syntax.ir.watsup:195.25-195.36
syntax argumentListIR = argumentIR*

;; spec-update/2.4-syntax.ir.watsup:202.1-207.18
syntax lvalueIR = 
   | ["$"]; [] / text
   | ["APPLY"] / 
   | ["KEY"] / 
   | ["ACTIONS"] / 
   | ["STATE"] / 
   | ["ENTRIES"] / 
   | ["TYPE"] / 
   | ["PRIORITY"] / 
   | []; []; [] / dotPrefix; nonTypeName
   | ["THIS"] / 
   | []; ["."]; [] / lvalueIR; member
   | []; ["["]; ["]"] / lvalue; expressionIR
   | []; ["["]; [":"]; ["]"] / lvalueIR; expressionIR; expressionIR
   | ["("]; [")"] / lvalueIR

;; spec-update/2.4-syntax.ir.watsup:223.24-223.39
syntax initializerIR = 
   | ["="]; [] / expressionIR

;; spec-update/2.4-syntax.ir.watsup:225.27-225.41
syntax optInitializerIR = initializerIR?

;; spec-update/2.4-syntax.ir.watsup:228.3-228.48
syntax variableDeclarationWithoutSemicolonIR = 
   | []; []; []; []; [] / optAnnotationsIR; typeIR; name; optInitializerIR

;; spec-update/2.4-syntax.ir.watsup:231.3-231.43
syntax variableDeclarationIR = 
   | []; [";"] / variableDeclarationWithoutSemicolonIR

;; spec-update/2.4-syntax.ir.watsup:234.3-234.54
syntax constantDeclarationIR = 
   | []; ["CONST"]; []; []; [";"] / optAnnotationsIR; typeIR; name; initializerIR

;; spec-update/2.4-syntax.ir.watsup:241.1-255.30
syntax assignmentOrMethodCallStatementWithoutSemicolonIR = 
   | []; ["("]; [")"] / lvalueIR; argumentListIR
   | []; ["<"]; [">"; "("]; [")"] / lvalueIR; typeArgumentListIR; argumentListIR
   | []; ["="]; [] / lvalueIR; expressionIR
   | []; ["+="]; [] / lvalueIR; expressionIR
   | []; ["|+|="]; [] / lvalueIR; expressionIR
   | []; ["-="]; [] / lvalueIR; expressionIR
   | []; ["|-|="]; [] / lvalueIR; expressionIR
   | []; ["*="]; [] / lvalueIR; expressionIR
   | []; ["/="]; [] / lvalueIR; expressionIR
   | []; ["%="]; [] / lvalueIR; expressionIR
   | []; ["<<="]; [] / lvalueIR; expressionIR
   | []; [">>="]; [] / lvalueIR; expressionIR
   | []; ["&="]; [] / lvalueIR; expressionIR
   | []; ["^="]; [] / lvalueIR; expressionIR
   | []; ["|="]; [] / lvalueIR; expressionIR

;; spec-update/2.4-syntax.ir.watsup:258.3-258.63
syntax assignmentOrMethodCallStatementIR = 
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolonIR

;; spec-update/2.4-syntax.ir.watsup:265.1-265.48
syntax directApplicationIR = 
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedTypeIR; argumentListIR

;; spec-update/2.4-syntax.ir.watsup:272.1-273.54
syntax conditionalStatementIR = 
   | ["IF"; "("]; [")"]; [] / expressionIR; statementIR
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expressionIR; statementIR; statementIR

;; spec-update/2.4-syntax.ir.watsup:279.27-279.29
syntax emptyStatementIR = 
   | [";"] / 

;; spec-update/2.4-syntax.ir.watsup:285.27-285.65
syntax blockStatementIR = 
   | []; ["{"]; ["}"] / optAnnotationsIR; statOrDeclListIR

;; spec-update/2.4-syntax.ir.watsup:292.1-293.27
syntax returnStatementIR = 
   | ["RETURN"; ";"] / 
   | ["RETURN"]; [";"] / expressionIR

;; spec-update/2.4-syntax.ir.watsup:299.27-299.35
syntax breakStatementIR = 
   | ["BREAK"; ";"] / 

;; spec-update/2.4-syntax.ir.watsup:305.30-305.41
syntax continueStatementIR = 
   | ["CONTINUE"; ";"] / 

;; spec-update/2.4-syntax.ir.watsup:311.26-311.33
syntax exitStatementIR = 
   | ["EXIT"; ";"] / 

;; spec-update/2.4-syntax.ir.watsup:318.1-319.25
syntax switchLabelIR = 
   | ["DEFAULT"] / 
   | []; []; [] / nonBraceExpressionInnerIR; noteIL

;; spec-update/2.4-syntax.ir.watsup:322.1-323.21
syntax switchCaseIR = 
   | []; [":"]; [] / switchLabelIR; blockStatementIR
   | []; [":"] / switchLabelIR

;; spec-update/2.4-syntax.ir.watsup:326.24-326.37
syntax switchCasesIR = switchCaseIR*

;; spec-update/2.4-syntax.ir.watsup:328.28-328.71
syntax switchStatementIR = 
   | ["SWITCH"; "("]; [")"; "{"]; ["}"] / expressionIR; switchCasesIR

;; spec-update/2.4-syntax.ir.watsup:335.1-336.54
syntax declOrAssignmentOrMethodCallStatementIR = 
   | []; []; []; []; [] / optAnnotationsIR; typeIR; name; optInitializerIR
   | []; ["("]; [")"] / lvalueIR; argumentListIR
   | []; ["<"]; [">"; "("]; [")"] / lvalueIR; typeArgumentListIR; argumentListIR
   | []; ["="]; [] / lvalueIR; expressionIR
   | []; ["+="]; [] / lvalueIR; expressionIR
   | []; ["|+|="]; [] / lvalueIR; expressionIR
   | []; ["-="]; [] / lvalueIR; expressionIR
   | []; ["|-|="]; [] / lvalueIR; expressionIR
   | []; ["*="]; [] / lvalueIR; expressionIR
   | []; ["/="]; [] / lvalueIR; expressionIR
   | []; ["%="]; [] / lvalueIR; expressionIR
   | []; ["<<="]; [] / lvalueIR; expressionIR
   | []; [">>="]; [] / lvalueIR; expressionIR
   | []; ["&="]; [] / lvalueIR; expressionIR
   | []; ["^="]; [] / lvalueIR; expressionIR
   | []; ["|="]; [] / lvalueIR; expressionIR

;; spec-update/2.4-syntax.ir.watsup:339.30-339.70
syntax forInitStatementsIR = declOrAssignmentOrMethodCallStatementIR*

;; spec-update/2.4-syntax.ir.watsup:342.32-342.82
syntax forUpdateStatementsIR = assignmentOrMethodCallStatementWithoutSemicolonIR*

;; spec-update/2.4-syntax.ir.watsup:345.1-346.34
syntax forCollectionExprIR = 
   | []; []; [] / expressionInnerIR; noteIL
   | []; [".."]; [] / expressionIR; expressionIR

;; spec-update/2.4-syntax.ir.watsup:349.1-351.91
syntax forStatementIR = 
   | []; ["FOR"; "("]; [";"]; [";"]; [")"]; [] / optAnnotationsIR; forInitStatementsIR; expressionIR; forUpdateStatementsIR; statementIR
   | []; ["FOR"; "("]; []; ["IN"]; [")"]; [] / optAnnotationsIR; typeIR; name; forCollectionExprIR; statementIR
   | []; ["FOR"; "("]; []; []; ["IN"]; [")"]; [] / optAnnotationsIR; annotationsIR; typeIR; name; forCollectionExprIR; statementIR

;; spec-update/2.4-syntax.ir.watsup:358.1-368.19
syntax statementIR = 
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolonIR
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedTypeIR; argumentListIR
   | ["IF"; "("]; [")"]; [] / expressionIR; statementIR
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expressionIR; statementIR; statementIR
   | [";"] / 
   | []; ["{"]; ["}"] / optAnnotationsIR; statOrDeclListIR
   | ["RETURN"; ";"] / 
   | ["RETURN"]; [";"] / expressionIR
   | ["BREAK"; ";"] / 
   | ["CONTINUE"; ";"] / 
   | ["EXIT"; ";"] / 
   | ["SWITCH"; "("]; [")"; "{"]; ["}"] / expressionIR; switchCasesIR
   | []; ["FOR"; "("]; [";"]; [";"]; [")"]; [] / optAnnotationsIR; forInitStatementsIR; expressionIR; forUpdateStatementsIR; statementIR
   | []; ["FOR"; "("]; []; ["IN"]; [")"]; [] / optAnnotationsIR; typeIR; name; forCollectionExprIR; statementIR
   | []; ["FOR"; "("]; []; []; ["IN"]; [")"]; [] / optAnnotationsIR; annotationsIR; typeIR; name; forCollectionExprIR; statementIR

;; spec-update/2.4-syntax.ir.watsup:371.1-373.16
syntax statementOrDeclarationIR = 
   | []; [";"] / variableDeclarationWithoutSemicolonIR
   | []; ["CONST"]; []; []; [";"] / optAnnotationsIR; typeIR; name; initializerIR
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolonIR
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedTypeIR; argumentListIR
   | ["IF"; "("]; [")"]; [] / expressionIR; statementIR
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expressionIR; statementIR; statementIR
   | [";"] / 
   | []; ["{"]; ["}"] / optAnnotationsIR; statOrDeclListIR
   | ["RETURN"; ";"] / 
   | ["RETURN"]; [";"] / expressionIR
   | ["BREAK"; ";"] / 
   | ["CONTINUE"; ";"] / 
   | ["EXIT"; ";"] / 
   | ["SWITCH"; "("]; [")"; "{"]; ["}"] / expressionIR; switchCasesIR
   | []; ["FOR"; "("]; [";"]; [";"]; [")"]; [] / optAnnotationsIR; forInitStatementsIR; expressionIR; forUpdateStatementsIR; statementIR
   | []; ["FOR"; "("]; []; ["IN"]; [")"]; [] / optAnnotationsIR; typeIR; name; forCollectionExprIR; statementIR
   | []; ["FOR"; "("]; []; []; ["IN"]; [")"]; [] / optAnnotationsIR; annotationsIR; typeIR; name; forCollectionExprIR; statementIR

;; spec-update/2.4-syntax.ir.watsup:376.27-376.52
syntax statOrDeclListIR = statementOrDeclarationIR*

;; spec-update/2.4-syntax.ir.watsup:383.3-383.50
syntax matchKindDeclarationIR = 
   | ["MATCH_KIND"; "{"]; []; ["}"] / identifierList; optTrailingComma

;; spec-update/2.4-syntax.ir.watsup:385.29-385.54
syntax errorDeclarationIR = 
   | ["ERROR"; "{"]; ["}"] / identifierList

;; spec-update/2.4-syntax.ir.watsup:392.3-392.53
syntax functionPrototypeIR = 
   | []; []; []; ["("]; [")"] / typeIR; name; optTypeParameters; parameterListIR

;; spec-update/2.4-syntax.ir.watsup:395.1-397.60
syntax methodPrototypeIR = 
   | []; []; [";"] / optAnnotationsIR; functionPrototypeIR
   | []; ["ABSTRACT"]; [";"] / optAnnotationsIR; functionPrototypeIR
   | []; []; ["("]; [")"; ";"] / optAnnotationsIR; typeIdentifier; parameterListIR

;; spec-update/2.4-syntax.ir.watsup:400.29-400.47
syntax methodPrototypesIR = methodPrototypeIR*

;; spec-update/2.4-syntax.ir.watsup:403.1-404.51
syntax externDeclarationIR = 
   | []; ["EXTERN"]; []; ["{"]; ["}"] / optAnnotationsIR; nonTypeName; optTypeParameters; methodPrototypesIR
   | []; ["EXTERN"]; [";"] / optAnnotationsIR; functionPrototypeIR

;; spec-update/2.4-syntax.ir.watsup:411.3-411.56
syntax functionDeclarationIR = 
   | []; []; []; [] / optAnnotationsIR; functionPrototypeIR; blockStatementIR

;; spec-update/2.4-syntax.ir.watsup:417.27-417.52
syntax objInitializerIR = 
   | ["="; "{"]; ["}"] / objDeclarationsIR

;; spec-update/2.4-syntax.ir.watsup:420.1-421.73
syntax instantiationIR = 
   | []; []; ["("]; [")"]; [";"] / optAnnotationsIR; typeIR; argumentListIR; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotationsIR; typeIR; argumentListIR; name; objInitializerIR

;; spec-update/2.4-syntax.ir.watsup:424.1-425.20
syntax objDeclarationIR = 
   | []; []; []; [] / optAnnotationsIR; functionPrototypeIR; blockStatementIR
   | []; []; ["("]; [")"]; [";"] / optAnnotationsIR; typeIR; argumentListIR; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotationsIR; typeIR; argumentListIR; name; objInitializerIR

;; spec-update/2.4-syntax.ir.watsup:428.28-428.45
syntax objDeclarationsIR = objDeclarationIR*

;; spec-update/2.4-syntax.ir.watsup:435.3-435.69
syntax actionDeclarationIR = 
   | []; ["ACTION"]; ["("]; [")"]; [] / optAnnotationsIR; name; parameterListIR; blockStatementIR

;; spec-update/2.4-syntax.ir.watsup:446.3-446.43
syntax keyElementIR = 
   | []; [":"]; []; [";"] / expressionIR; name; optAnnotationsIR

;; spec-update/2.4-syntax.ir.watsup:449.27-449.40
syntax keyElementListIR = keyElementIR*

;; spec-update/2.4-syntax.ir.watsup:456.1-457.87
syntax actionRefIR = 
   | []; ["#"; "("]; [","]; [")"] / prefixedNonTypeName; parameterListIR; parameterListIR
   | []; ["("]; [")"; "#"; "("]; [","]; [")"] / prefixedNonTypeName; argumentListIR; parameterListIR; parameterListIR

;; spec-update/2.4-syntax.ir.watsup:459.19-459.50
syntax actionIR = 
   | []; []; [";"] / optAnnotationsIR; actionRefIR

;; spec-update/2.4-syntax.ir.watsup:462.23-462.32
syntax actionListIR = actionIR*

;; spec-update/2.4-syntax.ir.watsup:469.1-470.37
syntax entryPriorityIR = 
   | ["PRIORITY"; "="]; [":"] / number
   | ["PRIORITY"; "="; "("]; [")"; ":"] / expressionIR

;; spec-update/2.4-syntax.ir.watsup:473.1-474.68
syntax entryIR = 
   | []; []; []; [":"]; []; [";"] / optCONST; entryPriorityIR; keysetExpressionIR; actionRefIR; optAnnotationsIR
   | []; []; [":"]; []; [";"] / optCONST; keysetExpressionIR; actionListIR; optAnnotationsIR

;; spec-update/2.4-syntax.ir.watsup:476.24-476.32
syntax entriesListIR = entryIR*

;; spec-update/2.4-syntax.ir.watsup:483.1-486.62
syntax tablePropertyIR = 
   | ["KEY"; "="; "{"]; ["}"] / keyElementListIR
   | ["ACTIONS"; "="; "{"]; ["}"] / actionListIR
   | []; []; ["ENTRIES"; "="; "{"]; ["}"] / optAnnotationsIR; optCONST; entriesListIR
   | []; []; []; []; [";"] / optAnnotationsIR; optCONST; nonTableKwName; initializerIR

;; spec-update/2.4-syntax.ir.watsup:489.30-489.46
syntax tablePropertyListIR = tablePropertyIR*

;; spec-update/2.4-syntax.ir.watsup:492.3-492.55
syntax tableDeclarationIR = 
   | []; ["TABLE"]; ["{"]; ["}"] / optAnnotationsIR; name; tablePropertyListIR

;; spec-update/2.4-syntax.ir.watsup:498.24-498.40
syntax controlBodyIR = blockStatementIR

;; spec-update/2.4-syntax.ir.watsup:501.1-505.26
syntax controlLocalDeclarationIR = 
   | []; ["CONST"]; []; []; [";"] / optAnnotationsIR; typeIR; name; initializerIR
   | []; ["ACTION"]; ["("]; [")"]; [] / optAnnotationsIR; name; parameterListIR; blockStatementIR
   | []; ["TABLE"]; ["{"]; ["}"] / optAnnotationsIR; name; tablePropertyListIR
   | []; []; ["("]; [")"]; [";"] / optAnnotationsIR; typeIR; argumentListIR; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotationsIR; typeIR; argumentListIR; name; objInitializerIR
   | []; [";"] / variableDeclarationWithoutSemicolonIR

;; spec-update/2.4-syntax.ir.watsup:508.37-508.63
syntax controlLocalDeclarationsIR = controlLocalDeclarationIR*

;; spec-update/2.4-syntax.ir.watsup:511.3-511.71
syntax controlTypeDeclarationIR = 
   | []; ["CONTROL"]; []; ["("]; [")"] / optAnnotationsIR; name; optTypeParameters; parameterListIR

;; spec-update/2.4-syntax.ir.watsup:514.3-514.106
syntax controlDeclarationIR = 
   | []; []; ["{"]; ["APPLY"]; ["}"] / controlTypeDeclarationIR; optConstructorParametersIR; controlLocalDeclarationsIR; controlBodyIR

;; spec-update/2.4-syntax.ir.watsup:521.1-521.68
syntax valueSetDeclarationIR = 
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"] / optAnnotationsIR; typeIR; expressionIR; name

;; spec-update/2.4-syntax.ir.watsup:527.23-527.52
syntax selectCaseIR = 
   | []; [":"]; [";"] / keysetExpressionIR; name

;; spec-update/2.4-syntax.ir.watsup:530.27-530.40
syntax selectCaseListIR = selectCaseIR*

;; spec-update/2.4-syntax.ir.watsup:532.29-532.79
syntax selectExpressionIR = 
   | ["SELECT"; "("]; [")"; "{"]; ["}"] / expressionListIR; selectCaseListIR

;; spec-update/2.4-syntax.ir.watsup:539.1-540.23
syntax stateExpressionIR = 
   | []; [";"] / name
   | ["SELECT"; "("]; [")"; "{"]; ["}"] / expressionListIR; selectCaseListIR

;; spec-update/2.4-syntax.ir.watsup:542.32-542.60
syntax transitionStatementIR = 
   | ["TRANSITION"]; [] / stateExpressionIR

;; spec-update/2.4-syntax.ir.watsup:548.33-548.73
syntax parserBlockStatementIR = 
   | []; ["{"]; ["}"] / optAnnotationsIR; parserStatementsIR

;; spec-update/2.4-syntax.ir.watsup:551.1-557.27
syntax parserStatementIR = 
   | []; [";"; "PHTM_11"] / assignmentOrMethodCallStatementWithoutSemicolonIR
   | []; ["."; "APPLY"; "("]; [")"; ";"] / namedTypeIR; argumentListIR
   | [";"] / 
   | []; [";"] / variableDeclarationWithoutSemicolonIR
   | []; ["CONST"]; []; []; [";"] / optAnnotationsIR; typeIR; name; initializerIR
   | []; ["{"]; ["}"] / optAnnotationsIR; parserStatementsIR
   | ["IF"; "("]; [")"]; [] / expressionIR; statementIR
   | ["IF"; "("]; [")"]; ["ELSE"]; [] / expressionIR; statementIR; statementIR

;; spec-update/2.4-syntax.ir.watsup:560.29-560.47
syntax parserStatementsIR = parserStatementIR*

;; spec-update/2.4-syntax.ir.watsup:563.3-563.76
syntax parserStateIR = 
   | []; ["STATE"]; ["{"]; []; ["}"] / optAnnotationsIR; name; parserStatementsIR; transitionStatementIR

;; spec-update/2.4-syntax.ir.watsup:567.25-567.39
syntax parserStatesIR = parserStateIR*

;; spec-update/2.4-syntax.ir.watsup:570.3-570.70
syntax parserTypeDeclarationIR = 
   | []; ["PARSER"]; []; ["("]; [")"] / optAnnotationsIR; name; optTypeParameters; parameterListIR

;; spec-update/2.4-syntax.ir.watsup:573.1-576.26
syntax parserLocalElementIR = 
   | []; ["CONST"]; []; []; [";"] / optAnnotationsIR; typeIR; name; initializerIR
   | []; [";"] / variableDeclarationWithoutSemicolonIR
   | []; []; ["("]; [")"]; [";"] / optAnnotationsIR; typeIR; argumentListIR; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotationsIR; typeIR; argumentListIR; name; objInitializerIR
   | []; ["VALUESET"; "<"]; [">"; "("]; [")"]; [";"] / optAnnotationsIR; typeIR; expressionIR; name

;; spec-update/2.4-syntax.ir.watsup:579.32-579.53
syntax parserLocalElementsIR = parserLocalElementIR*

;; spec-update/2.4-syntax.ir.watsup:582.3-582.95
syntax parserDeclarationIR = 
   | []; []; ["{"]; []; ["}"] / parserTypeDeclarationIR; optConstructorParametersIR; parserLocalElementsIR; parserStatesIR

;; spec-update/2.4-syntax.ir.watsup:589.3-589.71
syntax packageTypeDeclarationIR = 
   | []; ["PACKAGE"]; []; ["("]; [")"] / optAnnotationsIR; name; optTypeParameters; parameterListIR

;; spec-update/2.4-syntax.ir.watsup:595.32-595.50
syntax specifiedIdentifierIR = 
   | []; []; [] / name; initializerIR

;; spec-update/2.4-syntax.ir.watsup:598.36-598.58
syntax specifiedIdentifierListIR = specifiedIdentifierIR*

;; spec-update/2.4-syntax.ir.watsup:601.1-602.86
syntax enumDeclarationIR = 
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotationsIR; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotationsIR; typeIR; name; specifiedIdentifierListIR; optTrailingComma

;; spec-update/2.4-syntax.ir.watsup:608.24-608.55
syntax structFieldIR = 
   | []; []; []; [";"] / optAnnotationsIR; typeIR; name

;; spec-update/2.4-syntax.ir.watsup:611.28-611.42
syntax structFieldListIR = structFieldIR*

;; spec-update/2.4-syntax.ir.watsup:614.3-614.78
syntax headerUnionDeclarationIR = 
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR

;; spec-update/2.4-syntax.ir.watsup:617.3-617.72
syntax structTypeDeclarationIR = 
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR

;; spec-update/2.4-syntax.ir.watsup:620.3-620.72
syntax headerTypeDeclarationIR = 
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR

;; spec-update/2.4-syntax.ir.watsup:627.1-630.22
syntax derivedTypeDeclarationIR = 
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotationsIR; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotationsIR; typeIR; name; specifiedIdentifierListIR; optTrailingComma

;; spec-update/2.4-syntax.ir.watsup:637.1-640.38
syntax typedefDeclarationIR = 
   | []; ["TYPEDEF"]; []; [] / optAnnotationsIR; typeIR; name
   | []; ["TYPEDEF"]; []; ["PHTM_12"] / optAnnotationsIR; derivedTypeDeclarationIR; name
   | []; ["TYPE"]; []; [] / optAnnotationsIR; typeIR; name

;; spec-update/2.4-syntax.ir.watsup:647.1-654.40
syntax typeDeclarationIR = 
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotationsIR; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotationsIR; typeIR; name; specifiedIdentifierListIR; optTrailingComma
   | []; [";"] / typedefDeclarationIR
   | []; [";"; "PHTM_13"] / parserTypeDeclarationIR
   | []; [";"; "PHTM_14"] / controlTypeDeclarationIR
   | []; [";"; "PHTM_15"] / packageTypeDeclarationIR

;; spec-update/2.4-syntax.ir.watsup:661.1-670.22
syntax declarationIR = 
   | []; ["CONST"]; []; []; [";"] / optAnnotationsIR; typeIR; name; initializerIR
   | ["ERROR"; "{"]; ["}"] / identifierList
   | ["MATCH_KIND"; "{"]; []; ["}"] / identifierList; optTrailingComma
   | []; ["EXTERN"]; []; ["{"]; ["}"] / optAnnotationsIR; nonTypeName; optTypeParameters; methodPrototypesIR
   | []; ["EXTERN"]; [";"] / optAnnotationsIR; functionPrototypeIR
   | []; []; ["("]; [")"]; [";"] / optAnnotationsIR; typeIR; argumentListIR; name
   | []; []; ["("]; [")"]; []; [";"] / optAnnotationsIR; typeIR; argumentListIR; name; objInitializerIR
   | []; []; []; [] / optAnnotationsIR; functionPrototypeIR; blockStatementIR
   | []; ["ACTION"]; ["("]; [")"]; [] / optAnnotationsIR; name; parameterListIR; blockStatementIR
   | []; []; ["{"]; []; ["}"] / parserTypeDeclarationIR; optConstructorParametersIR; parserLocalElementsIR; parserStatesIR
   | []; []; ["{"]; ["APPLY"]; ["}"] / controlTypeDeclarationIR; optConstructorParametersIR; controlLocalDeclarationsIR; controlBodyIR
   | []; ["HEADER"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["HEADER_UNION"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["STRUCT"]; []; ["{"]; ["}"] / optAnnotationsIR; name; optTypeParameters; structFieldListIR
   | []; ["ENUM"]; ["{"]; []; ["}"] / optAnnotationsIR; name; identifierList; optTrailingComma
   | []; ["ENUM"]; []; ["{"]; []; ["}"] / optAnnotationsIR; typeIR; name; specifiedIdentifierListIR; optTrailingComma
   | []; [";"] / typedefDeclarationIR
   | []; [";"; "PHTM_13"] / parserTypeDeclarationIR
   | []; [";"; "PHTM_14"] / controlTypeDeclarationIR
   | []; [";"; "PHTM_15"] / packageTypeDeclarationIR

;; spec-update/2.4-syntax.ir.watsup:681.1-682.20
syntax simpleAnnotationIR = 
   | ["("]; [")"] / simpleAnnotationBodyIR
   | ["UNEXPECTED_TOKEN"] / 
   | ["ABSTRACT"] / 
   | ["ACTION"] / 
   | ["ACTIONS"] / 
   | ["APPLY"] / 
   | ["BOOL"] / 
   | ["BIT"] / 
   | ["BREAK"] / 
   | ["CONST"] / 
   | ["CONTINUE"] / 
   | ["CONTROL"] / 
   | ["DEFAULT"] / 
   | ["ELSE"] / 
   | ["ENTRIES"] / 
   | ["ENUM"] / 
   | ["ERROR"] / 
   | ["EXIT"] / 
   | ["EXTERN"] / 
   | ["FALSE"] / 
   | ["FOR"] / 
   | ["HEADER"] / 
   | ["HEADER_UNION"] / 
   | ["IF"] / 
   | ["IN"] / 
   | ["INOUT"] / 
   | ["INT"] / 
   | ["KEY"] / 
   | ["MATCH_KIND"] / 
   | ["TYPE"] / 
   | ["OUT"] / 
   | ["PARSER"] / 
   | ["PACKAGE"] / 
   | ["PRAGMA"] / 
   | ["RETURN"] / 
   | ["SELECT"] / 
   | ["STATE"] / 
   | ["STRING"] / 
   | ["STRUCT"] / 
   | ["SWITCH"] / 
   | ["TABLE"] / 
   | ["THIS"] / 
   | ["TRANSITION"] / 
   | ["TRUE"] / 
   | ["TUPLE"] / 
   | ["TYPEDEF"] / 
   | ["VARBIT"] / 
   | ["VALUESET"] / 
   | ["LIST"] / 
   | ["VOID"] / 
   | ["_"] / 
   | ["$"]; [] / text
   | ["@"]; [] / text
   | []; ["PHTM_2"] / text
   | []; ["PHTM_1"] / int
   | []; ["W"]; [] / nat; int
   | []; ["S"]; [] / nat; int
   | ["&&&"] / 
   | [".."] / 
   | ["<<"] / 
   | ["&&"] / 
   | ["||"] / 
   | ["=="] / 
   | ["!="] / 
   | [">="] / 
   | ["<="] / 
   | ["++"] / 
   | ["+"] / 
   | ["|+|"] / 
   | ["-"] / 
   | ["|-|"] / 
   | ["*"] / 
   | ["/"] / 
   | ["%"] / 
   | ["|"] / 
   | ["&"] / 
   | ["^"] / 
   | ["~"] / 
   | ["["] / 
   | ["]"] / 
   | ["{"] / 
   | ["}"] / 
   | ["<"] / 
   | [">"] / 
   | ["!"] / 
   | [":"] / 
   | [","; "PHTM_21"] / 
   | ["?"] / 
   | ["."] / 
   | ["="] / 
   | [";"] / 
   | ["@"] / 

;; spec-update/2.4-syntax.ir.watsup:685.33-685.52
syntax simpleAnnotationBodyIR = simpleAnnotationIR*

;; spec-update/2.4-syntax.ir.watsup:688.1-690.38
syntax structuredAnnotationBodyIR = 
   | []; []; [] / expressionListIR; optTrailingComma
   | []; []; ["PHTM_20"] / kvListIR; optTrailingComma

;; spec-update/2.4-syntax.ir.watsup:693.1-695.44
syntax annotationIR = 
   | ["@"]; [] / name
   | ["@"]; ["("]; [")"] / name; simpleAnnotationBodyIR
   | ["@"]; ["["]; ["]"] / name; structuredAnnotationBodyIR

;; spec-update/2.4-syntax.ir.watsup:698.24-698.37
syntax annotationsIR = annotationIR*

;; spec-update/2.4-syntax.ir.watsup:700.27-700.41
syntax optAnnotationsIR = annotationsIR?

;; spec-update/2.4-syntax.ir.watsup:707.22-707.36
syntax p4programIR = declarationIR*

;; spec-update/3.0-flow.watsup:5.15-5.25
syntax flow = 
   | ["CONT"] / 
   | ["RET"] / 

;; spec-update/3.0-flow.watsup:9.1-9.34
def $join_flow(flow, flow) : flow =

   ;; spec-update/3.0-flow.watsup:10.1-10.31
   clause 0(flow, flow') = "RET"
      -- if flow matches `RET`
      -- if flow' matches `RET`

   ;; spec-update/3.0-flow.watsup:11.1-11.32
   clause 1(f_a, f_b) = "CONT"

;; spec-update/3.1-env.watsup:5.20-5.45
syntax varTypeIR = 
   | []; []; []; []; [] / typeIR; direction; val?; ctk

;; spec-update/3.1-env.watsup:12.16-12.36
syntax frame = map<name, varTypeIR>

;; spec-update/3.1-env.watsup:14.1-14.27
def $empty_frame : frame =

   ;; spec-update/3.1-env.watsup:15.1-15.49
   clause 0 = $empty_map<name, varTypeIR>

;; spec-update/3.1-env.watsup:18.16-18.36
syntax tdenv = map<name, typeDefIR>

;; spec-update/3.1-env.watsup:20.1-20.27
def $empty_tdenv : tdenv =

   ;; spec-update/3.1-env.watsup:21.1-21.49
   clause 0 = $empty_map<name, typeDefIR>

;; spec-update/3.1-env.watsup:24.16-24.44
syntax fdenv = map<funcName, funcTypeDefIR>

;; spec-update/3.1-env.watsup:26.1-26.27
def $empty_fdenv : fdenv =

   ;; spec-update/3.1-env.watsup:27.1-27.57
   clause 0 = $empty_map<funcName, funcTypeDefIR>

;; spec-update/3.1-env.watsup:30.16-30.44
syntax cdenv = map<consName, consTypeDefIR>

;; spec-update/3.1-env.watsup:32.1-32.27
def $empty_cdenv : cdenv =

   ;; spec-update/3.1-env.watsup:33.1-33.57
   clause 0 = $empty_map<consName, consTypeDefIR>

;; spec-update/3.2-context.watsup:5.17-5.39
syntax cursor = 
   | ["GLOBAL"] / 
   | ["BLOCK"] / 
   | ["LOCAL"] / 

;; spec-update/3.2-context.watsup:16.3-19.18
syntax glayer = {["CDENV"]; [] / cdenv, ["TDENV"]; [] / tdenv, ["FDENV"]; [] / fdenv, ["FRAME"]; [] / frame}

;; spec-update/3.2-context.watsup:24.3-27.18
syntax blayer = {["ID"]; [] / name, ["TDENV"]; [] / tdenv, ["FDENV"]; [] / fdenv, ["FRAME"]; [] / frame}

;; spec-update/3.2-context.watsup:32.3-34.20
syntax llayer = {["ID"]; [] / name, ["TDENV"]; [] / tdenv, ["FRAMES"]; [] / frame*}

;; spec-update/3.2-context.watsup:41.3-43.19
syntax context = {["GLOBAL"]; [] / glayer, ["BLOCK"]; [] / blayer, ["LOCAL"]; [] / llayer}

;; spec-update/3.2-context.watsup:51.1-51.29
def $empty_context : context =

   ;; spec-update/3.2-context.watsup:53.1-68.58
   clause 0 = C
      -- let glayer = {"CDENV" $empty_cdenv, "TDENV" $empty_tdenv, "FDENV" $empty_fdenv, "FRAME" $empty_frame}
      -- let blayer = {"ID" "$" "" as name, "TDENV" $empty_tdenv, "FDENV" $empty_fdenv, "FRAME" $empty_frame}
      -- let llayer = {"ID" "$" "" as name, "TDENV" $empty_tdenv, "FRAMES" [$empty_frame]}
      -- let C = {"GLOBAL" glayer, "BLOCK" blayer, "LOCAL" llayer}

;; spec-update/3.2-context.watsup:74.1-74.30
def $enter(context) : context =

   ;; spec-update/3.2-context.watsup:76.1-76.68
   clause 0(C) = C["LOCAL"."FRAMES" = $empty_frame :: C."LOCAL"."FRAMES"]

;; spec-update/3.2-context.watsup:78.1-78.29
def $exit(context) : context =

   ;; spec-update/3.2-context.watsup:80.1-81.45
   clause 0(C) = C["LOCAL"."FRAMES" = frame_t*{frame_t <- frame_t*}]
      -- let frame*{frame <- frame*} = C."LOCAL"."FRAMES"
      -- if frame*{frame <- frame*} matches _ :: _
      -- let frame_h :: frame_t*{frame_t <- frame_t*} = frame*{frame <- frame*}

;; spec-update/3.3-context-table.watsup:5.19-5.33
syntax matchKey = (typeIR, name)

;; spec-update/3.3-context-table.watsup:7.22-7.55
syntax matchAction = (name, paramTypeIR*, argumentIR*)

;; spec-update/3.3-context-table.watsup:10.3-13.24
syntax matchPriority = {["VALUES"]; [] / int*, ["INIT"]; [] / bool, ["DELTA"]; [] / int, ["LARGEST_WINS"]; [] / bool}

;; spec-update/3.3-context-table.watsup:18.3-19.17
syntax matchEntry = {["SIZE"]; [] / int, ["CONST"]; [] / bool}

;; spec-update/3.3-context-table.watsup:24.1-27.11
syntax matchMode = 
   | ["NOPRI"] / 
   | ["NOPRILPM"]; [] / nat
   | ["PRI"] / 
   | ["PRILPM"] / 

;; spec-update/3.3-context-table.watsup:30.3-34.21
syntax tblctx = {["KEYS"]; [] / matchKey*, ["ACTIONS"]; [] / matchAction*, ["PRIORITIES"]; [] / matchPriority, ["ENTRIES"]; [] / matchEntry, ["MODE"]; [] / matchMode}

;; spec-update/3.3-context-table.watsup:41.1-42.10
syntax tblstate = 
   | ["LPM"]; [] / nat
   | ["NOLPM"] / 

;; spec-update/3.4-typing-relation.watsup:6.1-8.23
relation Eval_static: []; []; ["|-"]; ["~>"]; [] / cursor; context; expressionIR; val

;; spec-update/3.4-typing-relation.watsup:18.1-20.23
relation Type_ok: []; []; ["|-"]; [":"]; []; [] / cursor; context; typeOrVoid; typeIR; name*

;; spec-update/3.4-typing-relation.watsup:26.1-26.54
relation Sub_expl: []; ["<:"]; [] / typeIR; typeIR

;; spec-update/3.4-typing-relation.watsup:27.1-27.60
relation Sub_expl_canon: []; ["<:"]; [] / typeIR; typeIR

;; spec-update/3.4-typing-relation.watsup:28.1-28.64
relation Sub_expl_canon_neq: []; ["<:"]; [] / typeIR; typeIR

;; spec-update/3.4-typing-relation.watsup:30.1-30.54
relation Sub_impl: []; ["<<"]; [] / typeIR; typeIR

;; spec-update/3.4-typing-relation.watsup:31.1-31.60
relation Sub_impl_canon: []; ["<<"]; [] / typeIR; typeIR

;; spec-update/3.4-typing-relation.watsup:32.1-32.64
relation Sub_impl_canon_neq: []; ["<<"]; [] / typeIR; typeIR

;; spec-update/3.4-typing-relation.watsup:42.1-44.23
relation Expr_ok: []; []; ["|-"]; [":"]; [] / cursor; context; expression; expressionIR

;; spec-update/3.4-typing-relation.watsup:50.1-52.23
relation Arg_ok: []; []; ["|-"]; [":"]; []; [] / cursor; context; argument; argumentIR; typeIR

;; spec-update/3.4-typing-relation.watsup:58.1-60.23
relation Lval_ok: []; []; ["|-"]; [] / cursor; context; lvalueIR

;; spec-update/3.4-typing-relation.watsup:67.18-67.31
syntax blkctxt = 
   | ["INIT"] / 
   | ["NOINIT"] / 

;; spec-update/3.4-typing-relation.watsup:69.1-71.29
relation Block_ok: []; []; []; []; ["|-"]; [":"]; []; []; [] / cursor; context; flow; blkctxt; blockStatement; context; flow; blockStatementIR

;; spec-update/3.4-typing-relation.watsup:73.1-75.26
relation Stmt_ok: []; []; []; ["|-"]; [":"]; []; []; [] / cursor; context; flow; statement; context; flow; statementIR

;; spec-update/3.4-typing-relation.watsup:77.1-79.26
relation Stmts_ok: []; []; []; ["|-"]; [":"]; []; []; [] / cursor; context; flow; statement*; context; flow; statementIR*

;; spec-update/3.4-typing-relation.watsup:86.1-88.23
relation Param_ok: []; []; ["|-"]; [":"]; []; [] / cursor; context; parameter; parameterIR; name*

;; spec-update/3.4-typing-relation.watsup:90.1-92.23
relation CParam_ok: []; []; ["|-"]; [":"]; []; [] / cursor; context; parameter; parameterIR; name*

;; spec-update/3.4-typing-relation.watsup:98.1-100.23
relation Decl_ok: []; []; ["|-"]; [":"]; []; [] / cursor; context; declaration; context; declarationIR

;; spec-update/3.4-typing-relation.watsup:102.1-104.23
relation Decls_ok: []; []; ["|-"]; [":"]; []; [] / cursor; context; declaration; context; declarationIR*

;; spec-update/3.4-typing-relation.watsup:110.1-112.17
relation Prog_ok: ["|-"]; [":"]; []; [] / p4program; context; p4programIR

;; spec-update/3.4-typing-relation.watsup:123.18-123.29
syntax actctxt = 
   | ["ACT"] / 
   | ["NOACT"] / 

;; spec-update/3.4-typing-relation.watsup:125.1-127.29
relation Call_convention_ok: []; []; []; ["|-"]; ["~~"]; [":"]; [] / cursor; context; actctxt; paramTypeIR; (expressionIR, typeIR); expressionIR

;; spec-update/3.4-typing-relation.watsup:129.1-131.29
relation Call_convention_arg_ok: []; []; []; ["|-"]; ["~~"]; [":"]; [] / cursor; context; actctxt; paramTypeIR; (argumentIR, typeIR); argumentIR

;; spec-update/3.4-typing-relation.watsup:140.1-142.23
relation Call_site_ok: []; []; ["|-"]; [":"; "CALLSITE_OK"] / cursor; context; funcTypeIR

;; spec-update/3.4-typing-relation.watsup:144.1-146.35
relation Call_ok: []; []; []; []; ["|-"; "<"]; [">"; "("]; ["#"]; [")"; ":"]; []; []; [] / cursor; context; funcTypeIR; name*; typeArgIR*; argumentIR*; name*; typeIR; typeArgIR*; argumentIR*

;; spec-update/3.4-typing-relation.watsup:154.1-156.29
relation FuncType_ok: []; []; ["|-"]; []; []; [":"]; []; []; [] / cursor; context; name; typeArgIR*; argumentIR*; funcTypeIR; name*; name*

;; spec-update/3.4-typing-relation.watsup:158.1-160.32
relation MethodType_ok: []; []; ["|-"]; []; []; []; [":"]; []; []; []; [] / cursor; context; expressionIR; name; typeArgIR*; argumentIR*; funcTypeIR; expressionIR; name*; name*

;; spec-update/3.4-typing-relation.watsup:168.1-170.29
relation ConsType_ok: []; []; ["|-"]; []; []; [":"]; []; []; [] / cursor; context; name; typeArgIR*; argumentIR*; consTypeIR; name*; name*

;; spec-update/3.4-typing-relation.watsup:179.1-181.23
relation Inst_site_ok: []; []; ["|-"]; [":"; "INSTSITE_OK"] / cursor; context; consTypeIR

;; spec-update/3.4-typing-relation.watsup:183.1-185.35
relation Inst_ok: []; []; []; []; ["|-"; "<"]; [">"; "("]; ["#"]; [")"; ":"]; []; []; [] / cursor; context; consTypeIR; name*; typeArgIR*; argumentIR; name*; typeIR; typeArgIR*; argumentIR*
