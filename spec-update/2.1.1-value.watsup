;;
;; Value
;;

;; Forward declarations

syntax val

;;
;;;; Base values
;;

;;
;;;; Primitive values
;;

syntax primVal =
  | B bool
  | ERROR `. id
  | MATCH_KIND `. id
  | `" text `"

;;
;;;; Numeric values
;;

syntax numVal =
  | D int
  | nat W int
  | nat S int
  | nat V int `@ nat

syntax baseVal = | primVal | numVal

;;
;;;; Composite values
;;

syntax dataVal =
  | `[ val* ]
  | `( val* )
  | `[ val* `@ `( nat; nat ) ]
  | HEADER tid `{ (val, id)* }
  | HEADER_UNION tid `{ (val, id)* }
  | STRUCT tid `{ (val, id)* }
  | tid `. id
  | tid `. id `# val

;;
;;;; Synthesized values
;;

syntax setVal =
  | `{ val }
  | `{ val `&&& val }
  | `{ val `.. val }

syntax synthVal =
  | DEFAULT
  | SEQ `( val* )
  | SEQ_DEFAULT `( val* )
  | RECORD `{ (val, id)* }
  | RECORD_DEFAULT `{ (val, id)* }
  | INVALID
  | SET setVal
  | STATE
  | ENUM_TABLE tid `. id
  | STRUCT_TABLE tid `{ (val, id)* }

syntax val = | baseVal | dataVal | synthVal
