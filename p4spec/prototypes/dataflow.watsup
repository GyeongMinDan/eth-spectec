syntax foo =
  | A int
  | B bool
  | C nat
  | D text*
  | E `( nat* )

dec $bar(foo) : bool
def $bar(foo_1) = bool_4
  -- if C nat_1 = foo_1
  -- if foo_2 = A nat_1
  -- if foo_3 = B true
  -- if B bool_4 = foo_3
def $bar(C 3) = true

dec $baz(int*) : nat
def $baz(int_0 :: int_1*) = 0

relation Fizz:
  nat -> nat -> bool |- foo ~> foo : text*
  hint(input %0 %1 %2 %3 %4)

rule Fizz/buzz:
  nat_0 -> nat_1 -> bool_0 |- foo_a ~> foo_b : text_0*
  -- Fizz: nat_1 -> nat_0 -> false |- (E `( 1 )) ~> foo_a : text_0*
  -- if text_0 = "fizz"
  -- if "fuzz" =/= text_0
  -- if $bar(foo_b)
