;; Mutually recursive syntax

syntax a<x>
syntax b<x, y>

syntax a<x> = b<x, x>
syntax b<x, y> = | FOO x | BAR a<y>

;; Complex mixfix operators

syntax c<z> = | BAZ z | FIE `( z |- z ) | `{ z* ~> z } | FEE

;; Recursive struct

syntax d<u, v> = { FST d<u, u>, SND a<v> c<u> }

;; Relation

syntax foo = | ABC int DEF bool | GHI `[ text ]
syntax bar = | bool JKL nat | MNO foo
syntax baz = PQR foo -> bar

relation fizz: foo |- baz : bar
rule fizz/buzz:
  ABC 0 DEF true |- (PQR (GHI `[ "fizz" ]) -> bar) : (MNO (ABC 1 DEF false))

;; Definition

dec $bark<x>(foo, bar, def $at(int) : bool) : baz
def $bark<x>(ABC int' DEF bool'', true JKL 0, def $at) = PQR foo_23a45 -> bar'

;; Aliasing

syntax moon = int

dec $yellow(int) : bool
def $yellow(moon) = true
