;; Primitives

syntax num = nat
syntax boolean = bool
syntax str = text
syntax path = str*

;; Variable

syntax name =
  | TOP str
  | BARE str

;; Operators

syntax unop = | BNOT | LNOT | UMINUS

syntax binop =
  | PLUS | SPLUS | MINUS | SMINUS
  | MUL | DIV | MOD | SHL | SHR
  | LE | GE | LT | GT |EQ | NE
  | BAND | BXOR | BOR
  | CONCAT | LAND | LOR

;; Types

syntax type =
  | T_VOID
  | T_BOOL
  | T_MATCHKIND
  | T_ERR
  | T_STR
  | T_AINT
  | T_INT expr
  | T_BIT expr
  | T_VBIT expr
  | T_NAME name
  | T_SPEC name type*
  | T_STACK type expr
  | T_TUPLE type*
  | T_ANY

;; Parameters and Arguments

syntax dir = | NO | IN | OUT | INOUT
syntax param = str dir type expr?
syntax tparam = str*
syntax arg =
  | A_EXPR expr
  | A_NAME str expr
  | A_ANY

;; Expressions

syntax expr =
  | E_BOOL boolean
  | E_STR str
  | E_NUM nat
  | E_VAR name
  | E_LIST expr*
  | E_RECORD (str, expr)*
  | E_UN unop expr
  | E_BIN binop expr expr
  | E_TERN expr expr expr
  | E_CAST type expr
  | E_MASK expr expr
  | E_RANGE expr expr
  | E_ARRACC expr expr
  | E_BITACC expr expr expr
  | E_TYPEACC name str
  | E_ERRACC str
  | E_EXPRACC expr str
  | E_CALL expr type* arg*
  | E_INST type arg*

;; Statements

syntax block = stmt*

syntax case = | C_CASE str | C_FALL str | C_DEFAULT
syntax swcase = case block

syntax mtch = | M_EXPR expr | M_DEFAULT | M_ANY
syntax selcase = mtch* str

syntax stmt =
  | I_EMPTY
  | I_ASSIGN expr expr
  | I_SWITCH expr swcase*
  | I_IF expr stmt stmt
  | I_BLOCK block
  | I_EXIT
  | I_RET expr?
  | I_CALL expr type* arg*
  | I_TRANS str
  | I_SELECT expr* selcase*
  | I_DECL decl

;; Declarations

syntax state = str block

syntax key = expr str
syntax action = name arg*
syntax entry = mtch* action
syntax default = action boolean
syntax custom = str expr boolean

syntax decl =
  | D_CONST str type expr
  | D_VAR str type expr?
  | D_INST str type arg* block?
  | D_ERR str*
  | D_MATCHKIND str*
  | D_STRUCT str (str, type)*
  | D_HEADER str (str, type)*
  | D_UNION str (str, type)*
  | D_ENUM str str*
  | D_SENUM str type (str, expr)*
  | D_NEWTYPE str type? decl?
  | D_TYPEDEF str type? decl?
  | D_VALUESET str type expr
  | D_PARSERTYPE str tparam* param*
  | D_PARSER str tparam* param* param* decl* state*
  | D_ACTION str param* block
  | D_TABLE str key* entry* default? custom*
  | D_CONTROLTYPE str tparam* param*
  | D_CONTROL str tparam* param* param* decl* block
  | D_FUNC str type tparam* param* block
  | D_EXTERNFUNC str type tparam* param*
  | D_CONS str param*
  | D_ABSTRACT str type tparam* param*
  | D_METHOD str type tparam* param*
  | D_EXTERNOBJECT str tparam* decl*
  | D_PACKAGETYPE str tparam* param*

;; Program

syntax program = decl*
