;;
;; Relations for well-formedness
;;

relation Type_wf       : tidset |- typ
relation TypeDef_wf    : tidset |- typdef

relation ParamType_wf  : tidset |- paramtyp
relation ParamTypes_wf : tidset |- paramtyp*

relation FuncType_wf   : tidset |- functyp
relation FuncDef_wf    : tidset |- funcdef

syntax consctxt hint(show %latex("\\texttt{c}")) = _
relation CParamType_wf : tidset consctxt |- paramtyp
relation CParamTypes_wf: tidset consctxt |- paramtyp*

relation ConsType_wf   : tidset |- constyp
relation ConsDef_wf    : tidset |- consdef

;;
;; Well-formedness of types
;;

rule Type_wf/baset:
  tidset |- basetyp

rule Type_wf/vart:
  tidset |- VarT tid
  -- if $in_set(tid, tid, tidset)

rule Type_wf/spect:
  tidset |- SpecT ptd typ_a*
  -- if typ = $specialize_typdef(ptd, typ_a*)
  -- Type_wf: tidset |- typ

def $nestable_deft(typ) : bool
def $nestable'_deft(typ) : bool

def $nestable'_deft(typ) = $nestable'_deft($canon_typ(typ))
def $nestable'_deft(basetyp) = ~$is_voidt(basetyp) /\ ~$is_matchkindt(basetyp)
def $nestable'_deft(VarT tid) = true
def $nestable'_deft(datatyp) = true
def $nestable'_deft(typ) = false
  -- otherwise

rule Type_wf/deft:
  tidset |- DefT typ
  -- if $nestable_deft(typ)
  -- Type_wf: tidset |- typ

def $nestable_newt(typ) : bool
def $nestable'_newt(typ) : bool

def $nestable_newt(typ) = $nestable'_newt($canon_typ(typ))
def $nestable'_newt(BoolT) = true
def $nestable'_newt(FIntT w) = true
def $nestable'_newt(FBitT w) = true
def $nestable'_newt(VarT tid) = true
def $nestable'_newt(NewT id typ) = true
def $nestable'_newt(typ) = false
  -- otherwise

rule Type_wf/newt:
  tidset |- NewT id typ
  -- if $nestable_newt(typ)
  -- Type_wf: tidset |- typ

rule Type_wf/enumt:
  tidset |- EnumT id member*
  -- if $distinct_(member, member*)

def $nestable_senumt(typ) : bool
def $nestable'_senumt(typ) : bool
def $nestable_newt_in_senumt(typ) : bool

def $nestable_senumt(typ) = $nestable'_senumt($canon_typ(typ))
def $nestable'_senumt(FIntT w) = true
def $nestable'_senumt(VarT tid) = true
def $nestable'_senumt(NewT id typ) = $nestable_newt_in_senumt(typ)
def $nestable'_senumt(typ) = false
  -- otherwise

rule Type_wf/senumt:
  tidset |- SEnumT id typ (member, val)*
  -- if $distinct_(member, member*)
  -- if $nestable_senumt(typ)
  -- Type_wf: tidset |- typ

def $nestable_listt(typ) : bool
def $nestable'_listt(typ) : bool

def $nestable_listt(typ) = $nestable'_listt($canon_typ(typ))
def $nestable'_listt(basetyp) = ~$is_voidt(basetyp)
def $nestable'_listt(VarT tid) = true
def $nestable'_listt(datatyp) = true
def $nestable'_listt(typ) = false -- otherwise

rule Type_wf/listt:
  tidset |- ListT typ
  -- if $nestable_listt(typ)
  -- Type_wf: tidset |- typ

def $nestable_tuplet(typ) : bool
def $nestable'_tuplet(typ) : bool

def $nestable_tuplet(typ) = $nestable'_tuplet($canon_typ(typ))
def $nestable'_tuplet(ErrT) = true
def $nestable'_tuplet(BoolT) = true
def $nestable'_tuplet(numtyp) = ~$is_intt(numtyp)
def $nestable'_tuplet(VarT tid) = true
def $nestable'_tuplet(datatyp) = ~$is_listt(datatyp)
def $nestable'_tuplet(typ) = false
  -- otherwise

rule Type_wf/tuplet:
  tidset |- TupleT typ*
  -- if $nestable_tuplet(typ)*
  -- (Type_wf: tidset |- typ)*

def $nestable_stackt(typ) : bool
def $nestable'_stackt(typ) : bool

def $nestable_stackt(typ) = $nestable'_stackt($canon_typ(typ))
def $nestable'_stackt(VarT tid) = true
def $nestable'_stackt(HeaderT id (member, typ)*) = true
def $nestable'_stackt(UnionT id (member, typ)*) = true
def $nestable'_stackt(typ) = false
  -- otherwise

rule Type_wf/stackt:
  tidset |- StackT typ size
  -- if size >= 0
  -- if $nestable_stackt(typ)
  -- Type_wf: tidset |- typ

def $nestable_structt(typ) : bool
def $nestable'_structt(typ) : bool

def $nestable_structt(typ) = $nestable'_structt($canon_typ(typ))
def $nestable'_structt(ErrT) = true
def $nestable'_structt(BoolT) = true
def $nestable'_structt(numtyp) = ~$is_intt(numtyp)
def $nestable'_structt(VarT tid) = true
def $nestable'_structt(datatyp) = ~$is_listt(datatyp)
def $nestable'_structt(typ) = false -- otherwise

rule Type_wf/structt:
  tidset |- StructT id (member, typ)*
  -- if $distinct_(member, member*)
  -- if $nestable_structt(typ)*
  -- (Type_wf: tidset |- typ)*

def $nestable_headert(typ) : bool
def $nestable'_headert(typ) : bool
def $nestable_structt_in_headert(typ) : bool

def $nestable_headert(typ) = $nestable'_headert($canon_typ(typ))
def $nestable'_headert(BoolT) = true
def $nestable'_headert(numtyp) = ~$is_intt(numtyp)
def $nestable'_headert(VarT tid) = true
def $nestable'_headert(SEnumT id typ (member, val)*) = true
def $nestable'_headert(StructT id (member, typ)*) = true
  -- if $nestable_structt_in_headert(typ)*
def $nestable'_headert(typ) = false
  -- otherwise

rule Type_wf/headert:
  tidset |- HeaderT id (member, typ)*
  -- if $distinct_(member, member*)
  -- if $nestable_headert(typ)*
  -- (Type_wf: tidset |- typ)*

def $nestable_uniont(typ) : bool
def $nestable'_uniont(typ) : bool

def $nestable_uniont(typ) = $nestable'_uniont($canon_typ(typ))
def $nestable'_uniont(VarT tid) = true
def $nestable'_uniont(NewT id typ) = true
def $nestable'_uniont(HeaderT id (member, typ)*) = true
def $nestable'_uniont(typ) = false
  -- otherwise

rule Type_wf/uniont:
  tidset |- UnionT id (member, typ)*
  -- if $distinct_(member, member*)
  -- if $nestable_uniont(typ)*
  -- (Type_wf: tidset |- typ)*

rule Type_wf/externt:
  tidset |- ExternT id fmap
  -- if MAP (PAIR fid funcdef)* = fmap
  -- (FuncDef_wf: tidset |- funcdef)*

rule Type_wf/parsert:
  tidset |- ParserT paramtyp*
  -- if (id dir typ val = paramtyp)*
  -- (Type_wf: tidset |- typ)*

rule Type_wf/controlt:
  tidset |- ControlT paramtyp*
  -- if (id dir typ val = paramtyp)*
  -- (Type_wf: tidset |- typ)*

rule Type_wf/packaget:
  tidset |- PackageT typ*
  -- (Type_wf: tidset |- typ)*

rule Type_wf/tablet:
  tidset |- TableT id typ
  -- if typ' = $canon_typ(typ)
  -- if $is_table_structt(typ')
  -- Type_wf: tidset |- typ

rule Type_wf/defaultt:
  tidset |- DefaultT

rule Type_wf/seqt:
  tidset |- SeqT typ*
  -- (Type_wf: tidset |- typ)*

rule Type_wf/seqdefaultt:
  tidset |- SeqDefaultT typ*
  -- (Type_wf: tidset |- typ)*

rule Type_wf/recordt:
  tidset |- RecordT (member, typ)*
  -- if $distinct_(member, member*)
  -- (Type_wf: tidset |- typ)*

rule Type_wf/recorddefaultt:
  tidset |- RecordDefaultT (member, typ)*
  -- if $distinct_(member, member*)
  -- (Type_wf: tidset |- typ)*

rule Type_wf/invalidt:
  tidset |- InvalidT

def $nestable_sett(typ) : bool
def $nestable'_sett(typ) : bool
def $nestable_tuplet_in_sett(typ) : bool
def $nestable_seqt_in_sett(typ) : bool

def $nestable_sett(typ) = $nestable'_sett($canon_typ(typ))
def $nestable'_sett(BoolT) = true
def $nestable'_sett(FIntT w) = true
def $nestable'_sett(FBitT w) = true
def $nestable'_sett(VarT tid) = true
def $nestable'_sett(EnumT id member*) = true
def $nestable'_sett(SEnumT id typ (member, val)*) = true
def $nestable'_sett(TupleT typ*) = true
  -- if $nestable_tuplet_in_sett(typ)*
def $nestable'_sett(SeqT typ*) = true
  -- if $nestable_seqt_in_sett(typ)*
def $nestable'_sett(typ) = false
  -- otherwise

rule Type_wf/sett:
  tidset |- SetT typ
  -- if typ' = $canon_typ(typ)
  -- if $nestable_sett(typ)
  -- Type_wf: tidset |- typ

rule Type_wf/statet:
  tidset |- StateT

rule Type_wf/tableenumt:
  tidset |- TableEnumT id member*
  -- if $distinct_(member, member*)

rule Type_wf/tablestructt:
  tidset |- TableStructT id (member, typ)*
  -- if member* = "hit" "miss" "action\\_run"
  -- if typ* = BoolT BoolT (TableEnumT id_e member_e*)
  -- Type_wf: tidset |- TableEnumT id_e member_e*

rule Type_wf/anyt:
  tidset |- AnyT

;;
;; Well-formedness of type definitions
;;

def $nestable_monod(typ) : bool

def $nestable_monod(VarT tid) = true
def $nestable_monod(NewT id typ) = true
def $nestable_monod(EnumT id member*) = true
def $nestable_monod(SEnumT id typ (member, val)*) = true
def $nestable_monod(TableT id typ) = true
def $nestable_monod(typ) = false
  -- otherwise

rule TypeDef_wf/monod:
  tidset |- MonoD typ
  -- if $nestable_monod(typ)
  -- Type_wf: tidset |- typ

def $nestable_polyd(typ) : bool

def $nestable_polyd(TupleT typ*) = true
def $nestable_polyd(StackT typ size) = true
def $nestable_polyd(StructT id (member, typ)*) = true
def $nestable_polyd(HeaderT id (member, typ)*) = true
def $nestable_polyd(UnionT id (member, typ)*) = true
def $nestable_polyd(ExternT id fmap) = true
def $nestable_polyd(ParserT paramtyp*) = true
def $nestable_polyd(ControlT paramtyp*) = true
def $nestable_polyd(PackageT typ*) = true
def $nestable_polyd(typ) = false
  -- otherwise

rule TypeDef_wf/polyd:
  tidset |- PolyD (tparam*, tparam_hidden*) -> typ
  -- if $nestable_polyd(typ)
  -- if $distinct_(tid, tparam* tparam_hidden*)
  -- if tidset' = $union_set(tid, tidset, SET (tparam* tparam_hidden*))
  -- Type_wf: tidset' |- typ

;;
;; Well-formedness of paramter types
;;

rule ParamType_wf/none:
  tidset |- id dir typ eps
  -- Type_wf: tidset |- typ
  -- if ~($canon_typ(typ) = ExternT id_t fmap_t /\ dir =/= NO)

rule ParamType_wf/some:
  tidset |- id dir typ val
  -- Type_wf: tidset |- typ
  -- if ~($canon_typ(typ) = ExternT id_t fmap_t /\ dir =/= NO)
  -- if dir = IN \/ dir = NO

rule ParamTypes_wf:
  tidset |- paramtyp*
  -- if (id dir typ val = paramtyp)*
  -- if $distinct_(id, id*)
  -- (ParamType_wf: tidset |- paramtyp)*

;;
;; Well-formedness of function types
;;

rule FuncType_wf/builtinmethodt:
  tidset |- BuiltinMethodT paramtyp* typ_r
  -- ParamTypes_wf: tidset |- paramtyp*
  -- Type_wf: tidset |- typ_r

rule FuncType_wf/actiont:
  tidset |- ActionT paramtyp*
  -- ParamTypes_wf: tidset |- paramtyp*
  -- if (id dir typ val = paramtyp)*
  -- if $is_trailing_action(dir*)
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ') /\ ~$is_intt(typ')
         /\ ~$is_obj(typ')
         /\ (~$is_strt(typ') \/ (dir = NO)))*

rule FuncType_wf/parserapplymethodt:
  tidset |- ParserApplyMethodT paramtyp*
  -- ParamTypes_wf: tidset |- paramtyp*
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~($is_obj(typ') /\ ~$is_externt(typ'))
         /\ (~($is_strt(typ') \/ $is_intt(typ'))
             \/ (dir = NO)))*

rule FuncType_wf/controlapplymethodt:
  tidset |- ControlApplyMethodT paramtyp*
  -- ParamTypes_wf: tidset |- paramtyp*
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~($is_obj(typ') /\ ~$is_externt(typ'))
         /\ (~($is_strt(typ') \/ $is_intt(typ'))
             \/ (dir = NO)))*

rule FuncType_wf/tableapplymethodt:
  tidset |- TableApplyMethodT (TableStructT id (member, typ)*)

rule FuncType_wf/externfunctiont:
  tidset |- ExternFuncT paramtyp* typ_r
  -- ParamTypes_wf: tidset |- paramtyp*
  -- Type_wf: tidset |- typ_r
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~($is_obj(typ') /\ ~$is_externt(typ'))
         /\ (~($is_strt(typ') \/ $is_intt(typ'))
             \/ (dir = NO)))*

rule FuncType_wf/functiont:
  tidset |- FuncT paramtyp* typ_r
  -- ParamTypes_wf: tidset |- paramtyp*
  -- Type_wf: tidset |- typ_r
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ') /\ ~$is_obj(typ')
         /\ (~($is_strt(typ') \/ $is_intt(typ'))
             \/ (dir = NO)))*

rule FuncType_wf/externmethodt:
  tidset |- ExternMethodT paramtyp* typ_r
  -- ParamTypes_wf: tidset |- paramtyp*
  -- Type_wf: tidset |- typ_r
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~($is_obj(typ') /\ ~$is_externt(typ'))
         /\ (~($is_strt(typ') \/ $is_intt(typ'))
             \/ (dir = NO)))*

rule FuncType_wf/externabstractmethodt:
  tidset |- ExternAbstractMethodT paramtyp* typ_r
  -- ParamTypes_wf: tidset |- paramtyp*
  -- Type_wf: tidset |- typ_r
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~($is_obj(typ') /\ ~$is_externt(typ'))
         /\ (~($is_strt(typ') \/ $is_intt(typ'))
             \/ (dir = NO)))*

;;
;; Well-formedness of function definitions
;;

rule FuncDef_wf/monofd:
  tidset |- MonoFD functyp
  -- if $is_builtinmethodt(functyp)
        \/ $is_actiont(functyp)
        \/ $is_parserapplymethodt(functyp)
        \/ $is_controlapplymethodt(functyp)
        \/ $is_tableapplymethodt(functyp)
  ----
  -- FuncType_wf: tidset |- functyp

rule FuncDef_wf/polyfd:
  tidset |- PolyFD (tparam*, tparam_hidden*) -> functyp
  -- if $is_externfunct(functyp)
        \/ $is_funct(functyp)
        \/ $is_externmethodt(functyp)
        \/ $is_externabstractmethodt(functyp)
  ----
  -- if $distinct_(tid, tparam* tparam_hidden*)
  -- if tidset' = $union_set(tid, tidset, SET (tparam* tparam_hidden*))
  -- FuncType_wf: tidset' |- functyp

;;
;; Well-formedness of constructor paramter types
;;

rule CParamType_wf/none:
  tidset consctxt |- id NO typ eps
  -- Type_wf: tidset |- typ

rule CParamType_wf/some:
  tidset consctxt |- id NO typ val
  -- Type_wf: tidset |- typ

rule CParamTypes_wf:
  tidset consctxt |- paramtyp*
  -- if (id dir typ val = paramtyp)*
  -- if $distinct_(id, id*)
  -- (CParamType_wf: tidset consctxt |- paramtyp)*

;;
;; Well-formedness of constructor types
;;

rule ConsType_wf/externt:
  tidset |- ConsT paramtyp* typ
  -- CParamTypes_wf: tidset consctxt |- paramtyp*
  -- Type_wf: tidset |- typ
  -- if ExternT id fmap = $canon_typ(typ)
  ----
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~($is_obj(typ') /\ ~$is_externt(typ')))*

rule ConsType_wf/parsert:
  tidset |- ConsT paramtyp* typ
  -- CParamTypes_wf: tidset consctxt |- paramtyp*
  -- Type_wf: tidset |- typ
  -- if ParserT paramtyp'* = $canon_typ(typ)
  ----
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~$is_controlt(typ') /\ ~$is_packaget(typ') /\ ~$is_tablet(typ'))*

rule ConsType_wf/controlt:
  tidset |- ConsT paramtyp* typ
  -- CParamTypes_wf: tidset consctxt |- paramtyp*
  -- Type_wf: tidset |- typ
  -- if ControlT paramtyp'* = $canon_typ(typ)
  ----
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ')
         /\ ~$is_parsert(typ') /\ ~$is_packaget(typ') /\ ~$is_tablet(typ'))*

rule ConsType_wf/packaget:
  tidset |- ConsT paramtyp* typ
  -- CParamTypes_wf: tidset consctxt |- paramtyp*
  -- Type_wf: tidset |- typ
  -- if PackageT ty* = $canon_typ(typ)
  ----
  -- if (id dir typ val = paramtyp)*
  -- if (typ' = $canon_typ(typ))*
  ----
  -- if (~$is_deft(typ') /\ ~$is_spect(typ') /\ ~$is_tablet(typ'))*

;;
;; Well-formedness of constructor definitions
;;

rule ConsDef_wf:
  tidset |- ConsD (tparam*, tparam_hidden*) -> constyp
  -- if ConsT paramtyp* typ_r = constyp
  -- if typ_r' = $canon_typ(typ_r)
  ----
  -- if $is_externt(typ_r')
        \/ $is_parsert(typ_r')
        \/ $is_controlt(typ_r')
        \/ $is_packaget(typ_r')
  ----
  -- if $distinct_(tid, tparam* tparam_hidden*)
  -- if tidset' = $union_set(tid, tidset, SET (tparam* tparam_hidden*))
  -- ConsType_wf: tidset' |- constyp
