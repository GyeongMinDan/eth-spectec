relation Eval:
  env |- expr ==> value
  hint(input %0 %1)

rule Eval/numE:
  env |- NumE i ==> NumV i

rule Eval/binE-add:
  env |- BinE ADD e_l e_r ==> NumV $(i_l + i_r)
  -- Eval: env |- e_l ==> NumV i_l
  -- Eval: env |- e_r ==> NumV i_r

rule Eval/binE-mul:
  env |- BinE MUL e_l e_r ==> NumV $(i_l * i_r)
  -- Eval: env |- e_l ==> NumV i_l
  -- Eval: env |- e_r ==> NumV i_r

rule Eval/letE:
  env |- LetE id e_p e_b ==> value_b
  -- Eval: env |- e_p ==> value_p
  -- Eval: (id -> value_p) :: env |- e_b ==> value_b

rule Eval/varE:
  env |- VarE id ==> value
  -- if $lookup_env(env, id) = value

rule Eval/funE:
  env |- FuncE id _ e ==> CloV id e env 

rule Eval/appE:
  env |- ApplyE e_f e_a ==> value_r
  -- Eval: env |- e_f ==> CloV id e_b env_clo
  -- Eval: env |- e_a ==> value_a
  -- Eval: (id -> value_a) :: env_clo |- e_b ==> value_r
